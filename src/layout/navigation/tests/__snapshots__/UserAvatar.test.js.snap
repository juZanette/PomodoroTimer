// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserAvatar /> should render <UserAvatar /> correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <UserAvatar>
    <Styled(WithStyles(ForwardRef(Avatar)))
      alt="Alex"
      onClick={[Function]}
      sidenav={0}
      src="https://via.placeholder.com/100"
    >
      <WithStyles(ForwardRef(Avatar))
        alt="Alex"
        className="sc-AxjAm gipbYv"
        onClick={[Function]}
        sidenav={0}
        src="https://via.placeholder.com/100"
      >
        <ForwardRef(Avatar)
          alt="Alex"
          className="sc-AxjAm gipbYv"
          classes={
            Object {
              "circle": "MuiAvatar-circle",
              "colorDefault": "MuiAvatar-colorDefault",
              "fallback": "MuiAvatar-fallback",
              "img": "MuiAvatar-img",
              "root": "MuiAvatar-root",
              "rounded": "MuiAvatar-rounded",
              "square": "MuiAvatar-square",
            }
          }
          onClick={[Function]}
          sidenav={0}
          src="https://via.placeholder.com/100"
        >
          <div
            className="MuiAvatar-root MuiAvatar-circle sc-AxjAm gipbYv"
            onClick={[Function]}
            sidenav={0}
          >
            <img
              alt="Alex"
              className="MuiAvatar-img"
              src="https://via.placeholder.com/100"
            />
          </div>
        </ForwardRef(Avatar)>
      </WithStyles(ForwardRef(Avatar))>
    </Styled(WithStyles(ForwardRef(Avatar)))>
    <WithStyles(ForwardRef(Menu))
      anchorEl={null}
      id="sign-in-menu"
      keepMounted={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Menu)
        anchorEl={null}
        classes={
          Object {
            "list": "MuiMenu-list",
            "paper": "MuiMenu-paper",
          }
        }
        id="sign-in-menu"
        keepMounted={true}
        onClose={[Function]}
        open={false}
      >
        <WithStyles(ForwardRef(Popover))
          PaperProps={
            Object {
              "classes": Object {
                "root": "MuiMenu-paper",
              },
            }
          }
          anchorEl={null}
          anchorOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          getContentAnchorEl={[Function]}
          id="sign-in-menu"
          keepMounted={true}
          onClose={[Function]}
          onEntering={[Function]}
          open={false}
          transformOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          transitionDuration="auto"
        >
          <ForwardRef(Popover)
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            classes={
              Object {
                "paper": "MuiPopover-paper",
                "root": "MuiPopover-root",
              }
            }
            getContentAnchorEl={[Function]}
            id="sign-in-menu"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Modal)
              BackdropProps={
                Object {
                  "invisible": true,
                }
              }
              className="MuiPopover-root"
              id="sign-in-menu"
              keepMounted={true}
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Portal)
                disablePortal={false}
              >
                <Portal
                  containerInfo={
                    <body>
                      <div
                        class="app"
                        id="app"
                      >
                        <div
                          class="MuiAvatar-root MuiAvatar-circle sc-AxjAm gipbYv"
                          sidenav="0"
                        >
                          <img
                            alt="Alex"
                            class="MuiAvatar-img"
                            src="https://via.placeholder.com/100"
                          />
                        </div>
                      </div>
                      <div
                        aria-hidden="true"
                        class="MuiPopover-root"
                        id="sign-in-menu"
                        role="presentation"
                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                      >
                        <div
                          data-test="sentinelStart"
                          tabindex="0"
                        />
                        <div
                          class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                          style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                          tabindex="-1"
                        >
                          <ul
                            class="MuiList-root MuiMenu-list MuiList-padding"
                            role="menu"
                            tabindex="-1"
                          >
                            <li
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                              id="sign-out-menu-item"
                              role="menuitem"
                              tabindex="0"
                            >
                              Sign Out
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </li>
                          </ul>
                        </div>
                        <div
                          data-test="sentinelEnd"
                          tabindex="0"
                        />
                      </div>
                    </body>
                  }
                >
                  <div
                    className="MuiPopover-root"
                    id="sign-in-menu"
                    onKeyDown={[Function]}
                    role="presentation"
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "visibility": "hidden",
                        "zIndex": 1300,
                      }
                    }
                  >
                    <ForwardRef(SimpleBackdrop)
                      invisible={true}
                      onClick={[Function]}
                      open={false}
                    />
                    <TrapFocus
                      disableAutoFocus={false}
                      disableEnforceFocus={false}
                      disableRestoreFocus={false}
                      getDoc={[Function]}
                      isEnabled={[Function]}
                      open={false}
                    >
                      <div
                        data-test="sentinelStart"
                        tabIndex={0}
                      />
                      <ForwardRef(Grow)
                        appear={true}
                        in={false}
                        onEnter={[Function]}
                        onEntering={[Function]}
                        onExited={[Function]}
                        tabIndex="-1"
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={true}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          tabIndex="-1"
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <WithStyles(ForwardRef(Paper))
                            className="MuiPopover-paper"
                            classes={
                              Object {
                                "root": "MuiMenu-paper",
                              }
                            }
                            elevation={8}
                            style={
                              Object {
                                "opacity": 0,
                                "transform": "scale(0.75, 0.5625)",
                                "visibility": "hidden",
                              }
                            }
                            tabIndex="-1"
                          >
                            <ForwardRef(Paper)
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root MuiMenu-paper",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <div
                                className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <ForwardRef(MenuList)
                                  actions={
                                    Object {
                                      "current": Object {
                                        "adjustStyleForScrollbar": [Function],
                                      },
                                    }
                                  }
                                  autoFocus={false}
                                  autoFocusItem={false}
                                  className="MuiMenu-list"
                                  onKeyDown={[Function]}
                                  variant="selectedMenu"
                                >
                                  <WithStyles(ForwardRef(List))
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    role="menu"
                                    tabIndex={-1}
                                  >
                                    <ForwardRef(List)
                                      className="MuiMenu-list"
                                      classes={
                                        Object {
                                          "dense": "MuiList-dense",
                                          "padding": "MuiList-padding",
                                          "root": "MuiList-root",
                                          "subheader": "MuiList-subheader",
                                        }
                                      }
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ul
                                        className="MuiList-root MuiMenu-list MuiList-padding"
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <WithStyles(ForwardRef(MenuItem))
                                          id="sign-out-menu-item"
                                          key=".$.0"
                                          onClick={[Function]}
                                          tabIndex={0}
                                        >
                                          <ForwardRef(MenuItem)
                                            classes={
                                              Object {
                                                "dense": "MuiMenuItem-dense",
                                                "gutters": "MuiMenuItem-gutters",
                                                "root": "MuiMenuItem-root",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            id="sign-out-menu-item"
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                }
                                              }
                                              component="li"
                                              disableGutters={false}
                                              id="sign-out-menu-item"
                                              onClick={[Function]}
                                              role="menuitem"
                                              tabIndex={0}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                component="li"
                                                disableGutters={false}
                                                id="sign-out-menu-item"
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  component="li"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  id="sign-out-menu-item"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="li"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    id="sign-out-menu-item"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <li
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      id="sign-out-menu-item"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      Sign Out
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </li>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ForwardRef(MenuItem)>
                                        </WithStyles(ForwardRef(MenuItem))>
                                      </ul>
                                    </ForwardRef(List)>
                                  </WithStyles(ForwardRef(List))>
                                </ForwardRef(MenuList)>
                              </div>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </Transition>
                      </ForwardRef(Grow)>
                      <div
                        data-test="sentinelEnd"
                        tabIndex={0}
                      />
                    </TrapFocus>
                  </div>
                </Portal>
              </ForwardRef(Portal)>
            </ForwardRef(Modal)>
          </ForwardRef(Popover)>
        </WithStyles(ForwardRef(Popover))>
      </ForwardRef(Menu)>
    </WithStyles(ForwardRef(Menu))>
  </UserAvatar>
</Provider>
`;
