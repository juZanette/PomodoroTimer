// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SignIn /> should render <SignIn /> correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <SignIn>
    <Styled(WithStyles(ForwardRef(Button)))
      aria-controls="sign-in-menu"
      aria-haspopup="true"
      onClick={[Function]}
      startIcon={<UNDEFINED />}
    >
      <WithStyles(ForwardRef(Button))
        aria-controls="sign-in-menu"
        aria-haspopup="true"
        className="sc-AxjAm iyJsvQ"
        onClick={[Function]}
        startIcon={<UNDEFINED />}
      >
        <ForwardRef(Button)
          aria-controls="sign-in-menu"
          aria-haspopup="true"
          className="sc-AxjAm iyJsvQ"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit",
              "contained": "MuiButton-contained",
              "containedPrimary": "MuiButton-containedPrimary",
              "containedSecondary": "MuiButton-containedSecondary",
              "containedSizeLarge": "MuiButton-containedSizeLarge",
              "containedSizeSmall": "MuiButton-containedSizeSmall",
              "disableElevation": "MuiButton-disableElevation",
              "disabled": "Mui-disabled",
              "endIcon": "MuiButton-endIcon",
              "focusVisible": "Mui-focusVisible",
              "fullWidth": "MuiButton-fullWidth",
              "iconSizeLarge": "MuiButton-iconSizeLarge",
              "iconSizeMedium": "MuiButton-iconSizeMedium",
              "iconSizeSmall": "MuiButton-iconSizeSmall",
              "label": "MuiButton-label",
              "outlined": "MuiButton-outlined",
              "outlinedPrimary": "MuiButton-outlinedPrimary",
              "outlinedSecondary": "MuiButton-outlinedSecondary",
              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
              "root": "MuiButton-root",
              "sizeLarge": "MuiButton-sizeLarge",
              "sizeSmall": "MuiButton-sizeSmall",
              "startIcon": "MuiButton-startIcon",
              "text": "MuiButton-text",
              "textPrimary": "MuiButton-textPrimary",
              "textSecondary": "MuiButton-textSecondary",
              "textSizeLarge": "MuiButton-textSizeLarge",
              "textSizeSmall": "MuiButton-textSizeSmall",
            }
          }
          onClick={[Function]}
          startIcon={<UNDEFINED />}
        >
          <WithStyles(ForwardRef(ButtonBase))
            aria-controls="sign-in-menu"
            aria-haspopup="true"
            className="MuiButton-root MuiButton-text sc-AxjAm iyJsvQ"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <ForwardRef(ButtonBase)
              aria-controls="sign-in-menu"
              aria-haspopup="true"
              className="MuiButton-root MuiButton-text sc-AxjAm iyJsvQ"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
              type="button"
            >
              <button
                aria-controls="sign-in-menu"
                aria-haspopup="true"
                className="MuiButtonBase-root MuiButton-root MuiButton-text sc-AxjAm iyJsvQ"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
                type="button"
              >
                <span
                  className="MuiButton-label"
                >
                  <span
                    className="MuiButton-startIcon MuiButton-iconSizeMedium"
                  >
                    <ForwardRef>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef>
                  </span>
                  Sign In
                </span>
                <WithStyles(memo)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(memo)>
              </button>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(Button)>
      </WithStyles(ForwardRef(Button))>
    </Styled(WithStyles(ForwardRef(Button)))>
    <WithStyles(ForwardRef(Menu))
      anchorEl={null}
      id="sign-in-menu"
      keepMounted={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Menu)
        anchorEl={null}
        classes={
          Object {
            "list": "MuiMenu-list",
            "paper": "MuiMenu-paper",
          }
        }
        id="sign-in-menu"
        keepMounted={true}
        onClose={[Function]}
        open={false}
      >
        <WithStyles(ForwardRef(Popover))
          PaperProps={
            Object {
              "classes": Object {
                "root": "MuiMenu-paper",
              },
            }
          }
          anchorEl={null}
          anchorOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          getContentAnchorEl={[Function]}
          id="sign-in-menu"
          keepMounted={true}
          onClose={[Function]}
          onEntering={[Function]}
          open={false}
          transformOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          transitionDuration="auto"
        >
          <ForwardRef(Popover)
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            classes={
              Object {
                "paper": "MuiPopover-paper",
                "root": "MuiPopover-root",
              }
            }
            getContentAnchorEl={[Function]}
            id="sign-in-menu"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Modal)
              BackdropProps={
                Object {
                  "invisible": true,
                }
              }
              className="MuiPopover-root"
              id="sign-in-menu"
              keepMounted={true}
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Portal)
                disablePortal={false}
              >
                <Portal
                  containerInfo={
                    <body>
                      <div
                        class="app"
                        id="app"
                      >
                        <button
                          aria-controls="sign-in-menu"
                          aria-haspopup="true"
                          class="MuiButtonBase-root MuiButton-root MuiButton-text sc-AxjAm iyJsvQ"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            <span
                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                            >
                              <svg
                                aria-hidden="true"
                                class="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z"
                                />
                              </svg>
                            </span>
                            Sign In
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                      <div
                        aria-hidden="true"
                        class="MuiPopover-root"
                        id="sign-in-menu"
                        role="presentation"
                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                      >
                        <div
                          data-test="sentinelStart"
                          tabindex="0"
                        />
                        <div
                          class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                          style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                          tabindex="-1"
                        >
                          <ul
                            class="MuiList-root MuiMenu-list MuiList-padding"
                            role="menu"
                            tabindex="-1"
                          >
                            <li
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                              role="menuitem"
                              tabindex="0"
                            >
                              <div
                                class="MuiListItemIcon-root"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    viewBox="0 0 533.5 544.3"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z"
                                      fill="#4285f4"
                                    />
                                    <path
                                      d="M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z"
                                      fill="#34a853"
                                    />
                                    <path
                                      d="M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z"
                                      fill="#fbbc04"
                                    />
                                    <path
                                      d="M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z"
                                      fill="#ea4335"
                                    />
                                  </svg>
                                </svg>
                              </div>
                              <div
                                class="MuiListItemText-root"
                              >
                                <span
                                  class="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                >
                                  Sign in via Google
                                </span>
                              </div>
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </li>
                          </ul>
                        </div>
                        <div
                          data-test="sentinelEnd"
                          tabindex="0"
                        />
                      </div>
                    </body>
                  }
                >
                  <div
                    className="MuiPopover-root"
                    id="sign-in-menu"
                    onKeyDown={[Function]}
                    role="presentation"
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "visibility": "hidden",
                        "zIndex": 1300,
                      }
                    }
                  >
                    <ForwardRef(SimpleBackdrop)
                      invisible={true}
                      onClick={[Function]}
                      open={false}
                    />
                    <TrapFocus
                      disableAutoFocus={false}
                      disableEnforceFocus={false}
                      disableRestoreFocus={false}
                      getDoc={[Function]}
                      isEnabled={[Function]}
                      open={false}
                    >
                      <div
                        data-test="sentinelStart"
                        tabIndex={0}
                      />
                      <ForwardRef(Grow)
                        appear={true}
                        in={false}
                        onEnter={[Function]}
                        onEntering={[Function]}
                        onExited={[Function]}
                        tabIndex="-1"
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={true}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          tabIndex="-1"
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <WithStyles(ForwardRef(Paper))
                            className="MuiPopover-paper"
                            classes={
                              Object {
                                "root": "MuiMenu-paper",
                              }
                            }
                            elevation={8}
                            style={
                              Object {
                                "opacity": 0,
                                "transform": "scale(0.75, 0.5625)",
                                "visibility": "hidden",
                              }
                            }
                            tabIndex="-1"
                          >
                            <ForwardRef(Paper)
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root MuiMenu-paper",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <div
                                className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <ForwardRef(MenuList)
                                  actions={
                                    Object {
                                      "current": Object {
                                        "adjustStyleForScrollbar": [Function],
                                      },
                                    }
                                  }
                                  autoFocus={false}
                                  autoFocusItem={false}
                                  className="MuiMenu-list"
                                  onKeyDown={[Function]}
                                  variant="selectedMenu"
                                >
                                  <WithStyles(ForwardRef(List))
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    role="menu"
                                    tabIndex={-1}
                                  >
                                    <ForwardRef(List)
                                      className="MuiMenu-list"
                                      classes={
                                        Object {
                                          "dense": "MuiList-dense",
                                          "padding": "MuiList-padding",
                                          "root": "MuiList-root",
                                          "subheader": "MuiList-subheader",
                                        }
                                      }
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ul
                                        className="MuiList-root MuiMenu-list MuiList-padding"
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <WithStyles(ForwardRef(MenuItem))
                                          key=".$.0"
                                          onClick={[Function]}
                                          tabIndex={0}
                                        >
                                          <ForwardRef(MenuItem)
                                            classes={
                                              Object {
                                                "dense": "MuiMenuItem-dense",
                                                "gutters": "MuiMenuItem-gutters",
                                                "root": "MuiMenuItem-root",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                }
                                              }
                                              component="li"
                                              disableGutters={false}
                                              onClick={[Function]}
                                              role="menuitem"
                                              tabIndex={0}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                component="li"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  component="li"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="li"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <li
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemIcon))
                                                        key=".0"
                                                      >
                                                        <ForwardRef(ListItemIcon)
                                                          classes={
                                                            Object {
                                                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                              "root": "MuiListItemIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiListItemIcon-root"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <GoogleIcon>
                                                                    <svg
                                                                      viewBox="0 0 533.5 544.3"
                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                    >
                                                                      <path
                                                                        d="M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z"
                                                                        fill="#4285f4"
                                                                      />
                                                                      <path
                                                                        d="M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z"
                                                                        fill="#34a853"
                                                                      />
                                                                      <path
                                                                        d="M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z"
                                                                        fill="#fbbc04"
                                                                      />
                                                                      <path
                                                                        d="M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z"
                                                                        fill="#ea4335"
                                                                      />
                                                                    </svg>
                                                                  </GoogleIcon>
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </div>
                                                        </ForwardRef(ListItemIcon)>
                                                      </WithStyles(ForwardRef(ListItemIcon))>
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        key=".1"
                                                        primary="Sign in via Google"
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="Sign in via Google"
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                >
                                                                  Sign in via Google
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </li>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ForwardRef(MenuItem)>
                                        </WithStyles(ForwardRef(MenuItem))>
                                      </ul>
                                    </ForwardRef(List)>
                                  </WithStyles(ForwardRef(List))>
                                </ForwardRef(MenuList)>
                              </div>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </Transition>
                      </ForwardRef(Grow)>
                      <div
                        data-test="sentinelEnd"
                        tabIndex={0}
                      />
                    </TrapFocus>
                  </div>
                </Portal>
              </ForwardRef(Portal)>
            </ForwardRef(Modal)>
          </ForwardRef(Popover)>
        </WithStyles(ForwardRef(Popover))>
      </ForwardRef(Menu)>
    </WithStyles(ForwardRef(Menu))>
  </SignIn>
</Provider>
`;
