// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DaySelect /> should render <DaySelect /> correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <DaySelect>
    <Styled(MuiBox)
      my={2}
    >
      <div
        className="MuiBox-root MuiBox-root-2"
      >
        <Styled(WithStyles(ForwardRef(FormControl)))
          variant="outlined"
        >
          <WithStyles(ForwardRef(FormControl))
            className="sc-AxjAm jdsAYC"
            variant="outlined"
          >
            <ForwardRef(FormControl)
              className="sc-AxjAm jdsAYC"
              classes={
                Object {
                  "fullWidth": "MuiFormControl-fullWidth",
                  "marginDense": "MuiFormControl-marginDense",
                  "marginNormal": "MuiFormControl-marginNormal",
                  "root": "MuiFormControl-root",
                }
              }
              variant="outlined"
            >
              <div
                className="MuiFormControl-root sc-AxjAm jdsAYC"
              >
                <WithStyles(ForwardRef(InputLabel))
                  id="day-select"
                >
                  <ForwardRef(InputLabel)
                    classes={
                      Object {
                        "animated": "MuiInputLabel-animated",
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "filled": "MuiInputLabel-filled",
                        "focused": "Mui-focused",
                        "formControl": "MuiInputLabel-formControl",
                        "marginDense": "MuiInputLabel-marginDense",
                        "outlined": "MuiInputLabel-outlined",
                        "required": "Mui-required",
                        "root": "MuiInputLabel-root",
                        "shrink": "MuiInputLabel-shrink",
                      }
                    }
                    id="day-select"
                  >
                    <WithStyles(ForwardRef(FormLabel))
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                      classes={
                        Object {
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "required": "Mui-required",
                        }
                      }
                      data-shrink={true}
                      id="day-select"
                    >
                      <ForwardRef(FormLabel)
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                        classes={
                          Object {
                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                            "colorSecondary": "MuiFormLabel-colorSecondary",
                            "disabled": "Mui-disabled Mui-disabled",
                            "error": "Mui-error Mui-error",
                            "filled": "MuiFormLabel-filled",
                            "focused": "Mui-focused Mui-focused",
                            "required": "Mui-required Mui-required",
                            "root": "MuiFormLabel-root",
                          }
                        }
                        data-shrink={true}
                        id="day-select"
                      >
                        <label
                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                          data-shrink={true}
                          id="day-select"
                        >
                          Week starts on
                        </label>
                      </ForwardRef(FormLabel)>
                    </WithStyles(ForwardRef(FormLabel))>
                  </ForwardRef(InputLabel)>
                </WithStyles(ForwardRef(InputLabel))>
                <WithStyles(ForwardRef(Select))
                  label="Week starts on"
                  labelId="day-select"
                  onChange={[Function]}
                  value="Monday"
                >
                  <ForwardRef(Select)
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "filled": "MuiSelect-filled",
                        "icon": "MuiSelect-icon",
                        "iconFilled": "MuiSelect-iconFilled",
                        "iconOpen": "MuiSelect-iconOpen",
                        "iconOutlined": "MuiSelect-iconOutlined",
                        "outlined": "MuiSelect-outlined",
                        "root": "MuiSelect-root",
                        "select": "MuiSelect-select",
                        "selectMenu": "MuiSelect-selectMenu",
                      }
                    }
                    label="Week starts on"
                    labelId="day-select"
                    onChange={[Function]}
                    value="Monday"
                  >
                    <WithStyles(ForwardRef(OutlinedInput))
                      inputComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "IconComponent": [Function],
                            "MenuProps": [Function],
                            "SelectDisplayProps": [Function],
                            "aria-label": [Function],
                            "autoFocus": [Function],
                            "autoWidth": [Function],
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "defaultValue": [Function],
                            "disabled": [Function],
                            "displayEmpty": [Function],
                            "inputRef": [Function],
                            "labelId": [Function],
                            "multiple": [Function],
                            "name": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onClose": [Function],
                            "onFocus": [Function],
                            "onOpen": [Function],
                            "open": [Function],
                            "readOnly": [Function],
                            "renderValue": [Function],
                            "required": [Function],
                            "tabIndex": [Function],
                            "type": [Function],
                            "value": [Function],
                            "variant": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      inputProps={
                        Object {
                          "IconComponent": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "ArrowDropDownIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "MenuProps": undefined,
                          "SelectDisplayProps": Object {
                            "id": undefined,
                          },
                          "autoWidth": false,
                          "children": Array [
                            <ForwardRef(WithStyles)
                              value="Monday"
                            >
                              Monday
                            </ForwardRef(WithStyles)>,
                            <ForwardRef(WithStyles)
                              value="Sunday"
                            >
                              Sunday
                            </ForwardRef(WithStyles)>,
                          ],
                          "classes": Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select",
                            "selectMenu": "MuiSelect-selectMenu",
                          },
                          "displayEmpty": false,
                          "labelId": "day-select",
                          "multiple": false,
                          "onClose": undefined,
                          "onOpen": undefined,
                          "open": undefined,
                          "renderValue": undefined,
                          "type": undefined,
                          "variant": "outlined",
                        }
                      }
                      label="Week starts on"
                      labelWidth={0}
                      onChange={[Function]}
                      value="Monday"
                    >
                      <ForwardRef(OutlinedInput)
                        classes={
                          Object {
                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                            "adornedStart": "MuiOutlinedInput-adornedStart",
                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "input": "MuiOutlinedInput-input",
                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                            "marginDense": "MuiOutlinedInput-marginDense",
                            "multiline": "MuiOutlinedInput-multiline",
                            "notchedOutline": "MuiOutlinedInput-notchedOutline",
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        inputComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "IconComponent": [Function],
                              "MenuProps": [Function],
                              "SelectDisplayProps": [Function],
                              "aria-label": [Function],
                              "autoFocus": [Function],
                              "autoWidth": [Function],
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "defaultValue": [Function],
                              "disabled": [Function],
                              "displayEmpty": [Function],
                              "inputRef": [Function],
                              "labelId": [Function],
                              "multiple": [Function],
                              "name": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onClose": [Function],
                              "onFocus": [Function],
                              "onOpen": [Function],
                              "open": [Function],
                              "readOnly": [Function],
                              "renderValue": [Function],
                              "required": [Function],
                              "tabIndex": [Function],
                              "type": [Function],
                              "value": [Function],
                              "variant": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        inputProps={
                          Object {
                            "IconComponent": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "ArrowDropDownIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "MenuProps": undefined,
                            "SelectDisplayProps": Object {
                              "id": undefined,
                            },
                            "autoWidth": false,
                            "children": Array [
                              <ForwardRef(WithStyles)
                                value="Monday"
                              >
                                Monday
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="Sunday"
                              >
                                Sunday
                              </ForwardRef(WithStyles)>,
                            ],
                            "classes": Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            },
                            "displayEmpty": false,
                            "labelId": "day-select",
                            "multiple": false,
                            "onClose": undefined,
                            "onOpen": undefined,
                            "open": undefined,
                            "renderValue": undefined,
                            "type": undefined,
                            "variant": "outlined",
                          }
                        }
                        label="Week starts on"
                        labelWidth={0}
                        onChange={[Function]}
                        value="Monday"
                      >
                        <WithStyles(ForwardRef(InputBase))
                          classes={
                            Object {
                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                              "marginDense": "MuiOutlinedInput-marginDense",
                              "multiline": "MuiOutlinedInput-multiline",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          fullWidth={false}
                          inputComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "aria-label": [Function],
                                "autoFocus": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "displayEmpty": [Function],
                                "inputRef": [Function],
                                "labelId": [Function],
                                "multiple": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onFocus": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "readOnly": [Function],
                                "renderValue": [Function],
                                "required": [Function],
                                "tabIndex": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          inputProps={
                            Object {
                              "IconComponent": Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "displayName": "ArrowDropDownIcon",
                                "muiName": "SvgIcon",
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              },
                              "MenuProps": undefined,
                              "SelectDisplayProps": Object {
                                "id": undefined,
                              },
                              "autoWidth": false,
                              "children": Array [
                                <ForwardRef(WithStyles)
                                  value="Monday"
                                >
                                  Monday
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="Sunday"
                                >
                                  Sunday
                                </ForwardRef(WithStyles)>,
                              ],
                              "classes": Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              },
                              "displayEmpty": false,
                              "labelId": "day-select",
                              "multiple": false,
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": "outlined",
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          renderSuffix={[Function]}
                          type="text"
                          value="Monday"
                        >
                          <ForwardRef(InputBase)
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled Mui-disabled",
                                "error": "Mui-error Mui-error",
                                "focused": "Mui-focused Mui-focused",
                                "formControl": "MuiInputBase-formControl",
                                "fullWidth": "MuiInputBase-fullWidth",
                                "input": "MuiInputBase-input MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                "root": "MuiInputBase-root MuiOutlinedInput-root",
                              }
                            }
                            fullWidth={false}
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "required": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": undefined,
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <ForwardRef(WithStyles)
                                    value="Monday"
                                  >
                                    Monday
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="Sunday"
                                  >
                                    Sunday
                                  </ForwardRef(WithStyles)>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "labelId": "day-select",
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "outlined",
                              }
                            }
                            multiline={false}
                            onChange={[Function]}
                            renderSuffix={[Function]}
                            type="text"
                            value="Monday"
                          >
                            <div
                              className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                              onClick={[Function]}
                            >
                              <ForwardRef(SelectInput)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                SelectDisplayProps={
                                  Object {
                                    "id": undefined,
                                  }
                                }
                                aria-invalid={false}
                                autoWidth={false}
                                className="MuiInputBase-input MuiOutlinedInput-input"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  }
                                }
                                disabled={false}
                                displayEmpty={false}
                                inputRef={[Function]}
                                labelId="day-select"
                                multiple={false}
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                value="Monday"
                                variant="outlined"
                              >
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="day-select"
                                  className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  Monday
                                </div>
                                <input
                                  onAnimationStart={[Function]}
                                  type="hidden"
                                  value="Monday"
                                />
                                <ForwardRef
                                  className="MuiSelect-icon MuiSelect-iconOutlined"
                                >
                                  <WithStyles(ForwardRef(SvgIcon))
                                    className="MuiSelect-icon MuiSelect-iconOutlined"
                                  >
                                    <ForwardRef(SvgIcon)
                                      className="MuiSelect-icon MuiSelect-iconOutlined"
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                          "colorError": "MuiSvgIcon-colorError",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                          "root": "MuiSvgIcon-root",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M7 10l5 5 5-5z"
                                        />
                                      </svg>
                                    </ForwardRef(SvgIcon)>
                                  </WithStyles(ForwardRef(SvgIcon))>
                                </ForwardRef>
                                <WithStyles(ForwardRef(Menu))
                                  MenuListProps={
                                    Object {
                                      "aria-labelledby": "day-select",
                                      "disableListWrap": true,
                                      "role": "listbox",
                                    }
                                  }
                                  PaperProps={
                                    Object {
                                      "style": Object {
                                        "minWidth": undefined,
                                      },
                                    }
                                  }
                                  anchorEl={
                                    <div
                                      aria-haspopup="listbox"
                                      aria-labelledby="day-select"
                                      class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                      role="button"
                                      tabindex="0"
                                    >
                                      Monday
                                    </div>
                                  }
                                  id="menu-"
                                  onClose={[Function]}
                                  open={false}
                                >
                                  <ForwardRef(Menu)
                                    MenuListProps={
                                      Object {
                                        "aria-labelledby": "day-select",
                                        "disableListWrap": true,
                                        "role": "listbox",
                                      }
                                    }
                                    PaperProps={
                                      Object {
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="day-select"
                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                        role="button"
                                        tabindex="0"
                                      >
                                        Monday
                                      </div>
                                    }
                                    classes={
                                      Object {
                                        "list": "MuiMenu-list",
                                        "paper": "MuiMenu-paper",
                                      }
                                    }
                                    id="menu-"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <WithStyles(ForwardRef(Popover))
                                      PaperProps={
                                        Object {
                                          "classes": Object {
                                            "root": "MuiMenu-paper",
                                          },
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="day-select"
                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                          role="button"
                                          tabindex="0"
                                        >
                                          Monday
                                        </div>
                                      }
                                      anchorOrigin={
                                        Object {
                                          "horizontal": "left",
                                          "vertical": "top",
                                        }
                                      }
                                      getContentAnchorEl={[Function]}
                                      id="menu-"
                                      onClose={[Function]}
                                      onEntering={[Function]}
                                      open={false}
                                      transformOrigin={
                                        Object {
                                          "horizontal": "left",
                                          "vertical": "top",
                                        }
                                      }
                                      transitionDuration="auto"
                                    >
                                      <ForwardRef(Popover)
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="day-select"
                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                            role="button"
                                            tabindex="0"
                                          >
                                            Monday
                                          </div>
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        classes={
                                          Object {
                                            "paper": "MuiPopover-paper",
                                            "root": "MuiPopover-root",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        id="menu-"
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Modal)
                                          BackdropProps={
                                            Object {
                                              "invisible": true,
                                            }
                                          }
                                          className="MuiPopover-root"
                                          container={
                                            <body>
                                              <div
                                                class="app"
                                                id="app"
                                              >
                                                <div
                                                  class="MuiBox-root MuiBox-root-2"
                                                >
                                                  <div
                                                    class="MuiFormControl-root sc-AxjAm jdsAYC"
                                                  >
                                                    <label
                                                      class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                                                      data-shrink="true"
                                                      id="day-select"
                                                    >
                                                      Week starts on
                                                    </label>
                                                    <div
                                                      class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                    >
                                                      <div
                                                        aria-haspopup="listbox"
                                                        aria-labelledby="day-select"
                                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                        role="button"
                                                        tabindex="0"
                                                      >
                                                        Monday
                                                      </div>
                                                      <input
                                                        type="hidden"
                                                        value="Monday"
                                                      />
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M7 10l5 5 5-5z"
                                                        />
                                                      </svg>
                                                      <fieldset
                                                        aria-hidden="true"
                                                        class="PrivateNotchedOutline-root-83 MuiOutlinedInput-notchedOutline"
                                                      >
                                                        <legend
                                                          class="PrivateNotchedOutline-legendLabelled-85 PrivateNotchedOutline-legendNotched-86"
                                                        >
                                                          <span>
                                                            Week starts on
                                                          </span>
                                                        </legend>
                                                      </fieldset>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </body>
                                          }
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                        />
                                      </ForwardRef(Popover)>
                                    </WithStyles(ForwardRef(Popover))>
                                  </ForwardRef(Menu)>
                                </WithStyles(ForwardRef(Menu))>
                              </ForwardRef(SelectInput)>
                              <WithStyles(ForwardRef(NotchedOutline))
                                className="MuiOutlinedInput-notchedOutline"
                                label="Week starts on"
                                labelWidth={0}
                                notched={true}
                              >
                                <ForwardRef(NotchedOutline)
                                  className="MuiOutlinedInput-notchedOutline"
                                  classes={
                                    Object {
                                      "legend": "PrivateNotchedOutline-legend-84",
                                      "legendLabelled": "PrivateNotchedOutline-legendLabelled-85",
                                      "legendNotched": "PrivateNotchedOutline-legendNotched-86",
                                      "root": "PrivateNotchedOutline-root-83",
                                    }
                                  }
                                  label="Week starts on"
                                  labelWidth={0}
                                  notched={true}
                                >
                                  <fieldset
                                    aria-hidden={true}
                                    className="PrivateNotchedOutline-root-83 MuiOutlinedInput-notchedOutline"
                                  >
                                    <legend
                                      className="PrivateNotchedOutline-legendLabelled-85 PrivateNotchedOutline-legendNotched-86"
                                    >
                                      <span>
                                        Week starts on
                                      </span>
                                    </legend>
                                  </fieldset>
                                </ForwardRef(NotchedOutline)>
                              </WithStyles(ForwardRef(NotchedOutline))>
                            </div>
                          </ForwardRef(InputBase)>
                        </WithStyles(ForwardRef(InputBase))>
                      </ForwardRef(OutlinedInput)>
                    </WithStyles(ForwardRef(OutlinedInput))>
                  </ForwardRef(Select)>
                </WithStyles(ForwardRef(Select))>
              </div>
            </ForwardRef(FormControl)>
          </WithStyles(ForwardRef(FormControl))>
        </Styled(WithStyles(ForwardRef(FormControl)))>
      </div>
    </Styled(MuiBox)>
  </DaySelect>
</Provider>
`;
