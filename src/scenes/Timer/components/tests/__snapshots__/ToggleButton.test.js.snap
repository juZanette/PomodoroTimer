// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ToggleButton /> should render <ToggleButton /> correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ToggleButton>
    <Styled(MuiBox)
      display="flex"
      justifyContent="center"
      mt={2}
    >
      <div
        className="MuiBox-root MuiBox-root-2"
      >
        <Styled(WithStyles(ForwardRef(IconButton)))
          aria-label="start timer"
          disabled={false}
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="start timer"
            className="sc-AxjAm jVitc"
            disabled={false}
            onClick={[Function]}
          >
            <ForwardRef(IconButton)
              aria-label="start timer"
              className="sc-AxjAm jVitc"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="start timer"
                centerRipple={true}
                className="MuiIconButton-root sc-AxjAm jVitc"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
              >
                <ForwardRef(ButtonBase)
                  aria-label="start timer"
                  centerRipple={true}
                  className="MuiIconButton-root sc-AxjAm jVitc"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                >
                  <button
                    aria-label="start timer"
                    className="MuiButtonBase-root MuiIconButton-root sc-AxjAm jVitc"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef>
                        <WithStyles(ForwardRef(SvgIcon))>
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M8 5v14l11-7z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
        </Styled(WithStyles(ForwardRef(IconButton)))>
      </div>
    </Styled(MuiBox)>
  </ToggleButton>
</Provider>
`;
