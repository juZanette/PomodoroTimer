// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LabelButton /> should render <LabelButton /> correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <LabelButton>
    <Styled(MuiBox)
      display="flex"
      justifyContent="center"
    >
      <div
        className="MuiBox-root MuiBox-root-2"
      >
        <Styled(WithStyles(ForwardRef(Button)))
          disabled={false}
          labelcolor="#f50057"
          onClick={[Function]}
          size="small"
          startIcon={<UNDEFINED />}
        >
          <WithStyles(ForwardRef(Button))
            className="sc-AxhUy iFYfYG"
            disabled={false}
            labelcolor="#f50057"
            onClick={[Function]}
            size="small"
            startIcon={<UNDEFINED />}
          >
            <ForwardRef(Button)
              className="sc-AxhUy iFYfYG"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit",
                  "contained": "MuiButton-contained",
                  "containedPrimary": "MuiButton-containedPrimary",
                  "containedSecondary": "MuiButton-containedSecondary",
                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                  "disableElevation": "MuiButton-disableElevation",
                  "disabled": "Mui-disabled",
                  "endIcon": "MuiButton-endIcon",
                  "focusVisible": "Mui-focusVisible",
                  "fullWidth": "MuiButton-fullWidth",
                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                  "label": "MuiButton-label",
                  "outlined": "MuiButton-outlined",
                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                  "root": "MuiButton-root",
                  "sizeLarge": "MuiButton-sizeLarge",
                  "sizeSmall": "MuiButton-sizeSmall",
                  "startIcon": "MuiButton-startIcon",
                  "text": "MuiButton-text",
                  "textPrimary": "MuiButton-textPrimary",
                  "textSecondary": "MuiButton-textSecondary",
                  "textSizeLarge": "MuiButton-textSizeLarge",
                  "textSizeSmall": "MuiButton-textSizeSmall",
                }
              }
              disabled={false}
              labelcolor="#f50057"
              onClick={[Function]}
              size="small"
              startIcon={<UNDEFINED />}
            >
              <WithStyles(ForwardRef(ButtonBase))
                className="MuiButton-root MuiButton-text sc-AxhUy iFYfYG MuiButton-textSizeSmall MuiButton-sizeSmall"
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                labelcolor="#f50057"
                onClick={[Function]}
                type="button"
              >
                <ForwardRef(ButtonBase)
                  className="MuiButton-root MuiButton-text sc-AxhUy iFYfYG MuiButton-textSizeSmall MuiButton-sizeSmall"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  component="button"
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  labelcolor="#f50057"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-text sc-AxhUy iFYfYG MuiButton-textSizeSmall MuiButton-sizeSmall"
                    disabled={false}
                    labelcolor="#f50057"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      <span
                        className="MuiButton-startIcon MuiButton-iconSizeSmall"
                      >
                        <ForwardRef>
                          <WithStyles(ForwardRef(SvgIcon))>
                            <ForwardRef(SvgIcon)
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden={true}
                                className="MuiSvgIcon-root"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                      </span>
                      Add label
                    </span>
                    <WithStyles(memo)
                      center={false}
                    >
                      <ForwardRef(TouchRipple)
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(Button)>
          </WithStyles(ForwardRef(Button))>
        </Styled(WithStyles(ForwardRef(Button)))>
        <LabelsMenu
          anchor={null}
        >
          <WithStyles(ForwardRef(Menu))
            anchorEl={null}
            id="long-menu"
            keepMounted={true}
            margin="dense"
            onClose={[Function]}
          >
            <ForwardRef(Menu)
              anchorEl={null}
              classes={
                Object {
                  "list": "MuiMenu-list",
                  "paper": "MuiMenu-paper",
                }
              }
              id="long-menu"
              keepMounted={true}
              margin="dense"
              onClose={[Function]}
            >
              <WithStyles(ForwardRef(Popover))
                PaperProps={
                  Object {
                    "classes": Object {
                      "root": "MuiMenu-paper",
                    },
                  }
                }
                anchorEl={null}
                anchorOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                getContentAnchorEl={[Function]}
                id="long-menu"
                keepMounted={true}
                margin="dense"
                onClose={[Function]}
                onEntering={[Function]}
                transformOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                transitionDuration="auto"
              >
                <ForwardRef(Popover)
                  PaperProps={
                    Object {
                      "classes": Object {
                        "root": "MuiMenu-paper",
                      },
                    }
                  }
                  anchorEl={null}
                  anchorOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  classes={
                    Object {
                      "paper": "MuiPopover-paper",
                      "root": "MuiPopover-root",
                    }
                  }
                  getContentAnchorEl={[Function]}
                  id="long-menu"
                  keepMounted={true}
                  margin="dense"
                  onClose={[Function]}
                  onEntering={[Function]}
                  transformOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                  transitionDuration="auto"
                >
                  <ForwardRef(Modal)
                    BackdropProps={
                      Object {
                        "invisible": true,
                      }
                    }
                    className="MuiPopover-root"
                    id="long-menu"
                    keepMounted={true}
                    margin="dense"
                    onClose={[Function]}
                  >
                    <ForwardRef(Portal)
                      disablePortal={false}
                    >
                      <Portal
                        containerInfo={
                          <body>
                            <div
                              class="app"
                              id="app"
                            >
                              <div
                                class="MuiBox-root MuiBox-root-2"
                              >
                                <button
                                  class="MuiButtonBase-root MuiButton-root MuiButton-text sc-AxhUy iFYfYG MuiButton-textSizeSmall MuiButton-sizeSmall"
                                  labelcolor="#f50057"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    <span
                                      class="MuiButton-startIcon MuiButton-iconSizeSmall"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z"
                                        />
                                      </svg>
                                    </span>
                                    Add label
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                            <div
                              aria-hidden="true"
                              class="MuiPopover-root"
                              id="long-menu"
                              margin="dense"
                              role="presentation"
                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                            >
                              <div
                                data-test="sentinelStart"
                                tabindex="0"
                              />
                              <div
                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                tabindex="-1"
                              >
                                <ul
                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                  role="menu"
                                  tabindex="-1"
                                >
                                  <li
                                    aria-disabled="false"
                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                    role="menuitem"
                                    tabindex="0"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root sc-AxhCb cdoERD"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                      />
                                    </svg>
                                    Add new label
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </li>
                                </ul>
                              </div>
                              <div
                                data-test="sentinelEnd"
                                tabindex="0"
                              />
                            </div>
                          </body>
                        }
                      >
                        <div
                          className="MuiPopover-root"
                          id="long-menu"
                          margin="dense"
                          onKeyDown={[Function]}
                          role="presentation"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                              "visibility": "hidden",
                              "zIndex": 1300,
                            }
                          }
                        >
                          <ForwardRef(SimpleBackdrop)
                            invisible={true}
                            onClick={[Function]}
                          />
                          <TrapFocus
                            disableAutoFocus={false}
                            disableEnforceFocus={false}
                            disableRestoreFocus={false}
                            getDoc={[Function]}
                            isEnabled={[Function]}
                          >
                            <div
                              data-test="sentinelStart"
                              tabIndex={0}
                            />
                            <ForwardRef(Grow)
                              appear={true}
                              onEnter={[Function]}
                              onEntering={[Function]}
                              onExited={[Function]}
                              tabIndex="-1"
                              timeout="auto"
                            >
                              <Transition
                                addEndListener={[Function]}
                                appear={true}
                                enter={true}
                                exit={true}
                                in={false}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                tabIndex="-1"
                                timeout={null}
                                unmountOnExit={false}
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiPopover-paper"
                                  classes={
                                    Object {
                                      "root": "MuiMenu-paper",
                                    }
                                  }
                                  elevation={8}
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "transform": "scale(0.75, 0.5625)",
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiPopover-paper"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root MuiMenu-paper",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={8}
                                    style={
                                      Object {
                                        "opacity": 0,
                                        "transform": "scale(0.75, 0.5625)",
                                        "visibility": "hidden",
                                      }
                                    }
                                    tabIndex="-1"
                                  >
                                    <div
                                      className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                      style={
                                        Object {
                                          "opacity": 0,
                                          "transform": "scale(0.75, 0.5625)",
                                          "visibility": "hidden",
                                        }
                                      }
                                      tabIndex="-1"
                                    >
                                      <ForwardRef(MenuList)
                                        actions={
                                          Object {
                                            "current": Object {
                                              "adjustStyleForScrollbar": [Function],
                                            },
                                          }
                                        }
                                        autoFocus={false}
                                        className="MuiMenu-list"
                                        onKeyDown={[Function]}
                                        variant="selectedMenu"
                                      >
                                        <WithStyles(ForwardRef(List))
                                          className="MuiMenu-list"
                                          onKeyDown={[Function]}
                                          role="menu"
                                          tabIndex={-1}
                                        >
                                          <ForwardRef(List)
                                            className="MuiMenu-list"
                                            classes={
                                              Object {
                                                "dense": "MuiList-dense",
                                                "padding": "MuiList-padding",
                                                "root": "MuiList-root",
                                                "subheader": "MuiList-subheader",
                                              }
                                            }
                                            onKeyDown={[Function]}
                                            role="menu"
                                            tabIndex={-1}
                                          >
                                            <ul
                                              className="MuiList-root MuiMenu-list MuiList-padding"
                                              onKeyDown={[Function]}
                                              role="menu"
                                              tabIndex={-1}
                                            >
                                              <WithStyles(ForwardRef(MenuItem))
                                                key=".$.1"
                                                onClick={[Function]}
                                                tabIndex={0}
                                              >
                                                <ForwardRef(MenuItem)
                                                  classes={
                                                    Object {
                                                      "dense": "MuiMenuItem-dense",
                                                      "gutters": "MuiMenuItem-gutters",
                                                      "root": "MuiMenuItem-root",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className="MuiMenuItem-root MuiMenuItem-gutters"
                                                    classes={
                                                      Object {
                                                        "dense": "MuiMenuItem-dense",
                                                      }
                                                    }
                                                    component="li"
                                                    disableGutters={false}
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component="li"
                                                      disableGutters={false}
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        component="li"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="li"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          role="menuitem"
                                                          tabIndex={0}
                                                        >
                                                          <li
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="menuitem"
                                                            tabIndex={0}
                                                          >
                                                            <Styled(AddIcon)
                                                              key=".0"
                                                            >
                                                              <ForwardRef
                                                                className="sc-AxhCb cdoERD"
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  className="sc-AxhCb cdoERD"
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    className="sc-AxhCb cdoERD"
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root sc-AxhCb cdoERD"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef>
                                                            </Styled(AddIcon)>
                                                            Add new label
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </li>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                </ForwardRef(MenuItem)>
                                              </WithStyles(ForwardRef(MenuItem))>
                                            </ul>
                                          </ForwardRef(List)>
                                        </WithStyles(ForwardRef(List))>
                                      </ForwardRef(MenuList)>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </Transition>
                            </ForwardRef(Grow)>
                            <div
                              data-test="sentinelEnd"
                              tabIndex={0}
                            />
                          </TrapFocus>
                        </div>
                      </Portal>
                    </ForwardRef(Portal)>
                  </ForwardRef(Modal)>
                </ForwardRef(Popover)>
              </WithStyles(ForwardRef(Popover))>
            </ForwardRef(Menu)>
          </WithStyles(ForwardRef(Menu))>
        </LabelsMenu>
      </div>
    </Styled(MuiBox)>
  </LabelButton>
</Provider>
`;
