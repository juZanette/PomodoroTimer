// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LabelForm /> should render <LabelForm /> correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <LabelForm>
    <form
      autoComplete="off"
      noValidate={true}
    >
      <WithStyles(ForwardRef(TextField))
        autoFocus={true}
        error={false}
        fullWidth={true}
        helperText=" "
        id="label-name"
        label="Label name"
        margin="normal"
        name="name"
        onBlur={[Function]}
        onChange={[Function]}
        required={true}
        value=""
        variant="filled"
      >
        <ForwardRef(TextField)
          autoFocus={true}
          classes={
            Object {
              "root": "MuiTextField-root",
            }
          }
          error={false}
          fullWidth={true}
          helperText=" "
          id="label-name"
          label="Label name"
          margin="normal"
          name="name"
          onBlur={[Function]}
          onChange={[Function]}
          required={true}
          value=""
          variant="filled"
        >
          <WithStyles(ForwardRef(FormControl))
            className="MuiTextField-root"
            color="primary"
            disabled={false}
            error={false}
            fullWidth={true}
            margin="normal"
            required={true}
            variant="filled"
          >
            <ForwardRef(FormControl)
              className="MuiTextField-root"
              classes={
                Object {
                  "fullWidth": "MuiFormControl-fullWidth",
                  "marginDense": "MuiFormControl-marginDense",
                  "marginNormal": "MuiFormControl-marginNormal",
                  "root": "MuiFormControl-root",
                }
              }
              color="primary"
              disabled={false}
              error={false}
              fullWidth={true}
              margin="normal"
              required={true}
              variant="filled"
            >
              <div
                className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
              >
                <WithStyles(ForwardRef(InputLabel))
                  htmlFor="label-name"
                  id="label-name-label"
                >
                  <ForwardRef(InputLabel)
                    classes={
                      Object {
                        "animated": "MuiInputLabel-animated",
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "filled": "MuiInputLabel-filled",
                        "focused": "Mui-focused",
                        "formControl": "MuiInputLabel-formControl",
                        "marginDense": "MuiInputLabel-marginDense",
                        "outlined": "MuiInputLabel-outlined",
                        "required": "Mui-required",
                        "root": "MuiInputLabel-root",
                        "shrink": "MuiInputLabel-shrink",
                      }
                    }
                    htmlFor="label-name"
                    id="label-name-label"
                  >
                    <WithStyles(ForwardRef(FormLabel))
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled"
                      classes={
                        Object {
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "required": "Mui-required",
                        }
                      }
                      data-shrink={true}
                      htmlFor="label-name"
                      id="label-name-label"
                    >
                      <ForwardRef(FormLabel)
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled"
                        classes={
                          Object {
                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                            "colorSecondary": "MuiFormLabel-colorSecondary",
                            "disabled": "Mui-disabled Mui-disabled",
                            "error": "Mui-error Mui-error",
                            "filled": "MuiFormLabel-filled",
                            "focused": "Mui-focused Mui-focused",
                            "required": "Mui-required Mui-required",
                            "root": "MuiFormLabel-root",
                          }
                        }
                        data-shrink={true}
                        htmlFor="label-name"
                        id="label-name-label"
                      >
                        <label
                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                          data-shrink={true}
                          htmlFor="label-name"
                          id="label-name-label"
                        >
                          Label name
                          <span
                            aria-hidden={true}
                            className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                          >
                            â€‰
                            *
                          </span>
                        </label>
                      </ForwardRef(FormLabel)>
                    </WithStyles(ForwardRef(FormLabel))>
                  </ForwardRef(InputLabel)>
                </WithStyles(ForwardRef(InputLabel))>
                <WithStyles(ForwardRef(FilledInput))
                  aria-describedby="label-name-helper-text"
                  autoFocus={true}
                  fullWidth={true}
                  id="label-name"
                  multiline={false}
                  name="name"
                  onBlur={[Function]}
                  onChange={[Function]}
                  value=""
                >
                  <ForwardRef(FilledInput)
                    aria-describedby="label-name-helper-text"
                    autoFocus={true}
                    classes={
                      Object {
                        "adornedEnd": "MuiFilledInput-adornedEnd",
                        "adornedStart": "MuiFilledInput-adornedStart",
                        "colorSecondary": "MuiFilledInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "input": "MuiFilledInput-input",
                        "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                        "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                        "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                        "inputMarginDense": "MuiFilledInput-inputMarginDense",
                        "inputMultiline": "MuiFilledInput-inputMultiline",
                        "marginDense": "MuiFilledInput-marginDense",
                        "multiline": "MuiFilledInput-multiline",
                        "root": "MuiFilledInput-root",
                        "underline": "MuiFilledInput-underline",
                      }
                    }
                    fullWidth={true}
                    id="label-name"
                    multiline={false}
                    name="name"
                    onBlur={[Function]}
                    onChange={[Function]}
                    value=""
                  >
                    <WithStyles(ForwardRef(InputBase))
                      aria-describedby="label-name-helper-text"
                      autoFocus={true}
                      classes={
                        Object {
                          "adornedEnd": "MuiFilledInput-adornedEnd",
                          "adornedStart": "MuiFilledInput-adornedStart",
                          "colorSecondary": "MuiFilledInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "input": "MuiFilledInput-input",
                          "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                          "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                          "inputMarginDense": "MuiFilledInput-inputMarginDense",
                          "inputMultiline": "MuiFilledInput-inputMultiline",
                          "marginDense": "MuiFilledInput-marginDense",
                          "multiline": "MuiFilledInput-multiline",
                          "root": "MuiFilledInput-root MuiFilledInput-underline",
                          "underline": null,
                        }
                      }
                      fullWidth={true}
                      id="label-name"
                      inputComponent="input"
                      multiline={false}
                      name="name"
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <ForwardRef(InputBase)
                        aria-describedby="label-name-helper-text"
                        autoFocus={true}
                        classes={
                          Object {
                            "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                            "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                            "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                            "disabled": "Mui-disabled Mui-disabled",
                            "error": "Mui-error Mui-error",
                            "focused": "Mui-focused Mui-focused",
                            "formControl": "MuiInputBase-formControl",
                            "fullWidth": "MuiInputBase-fullWidth",
                            "input": "MuiInputBase-input MuiFilledInput-input",
                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                            "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                            "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                            "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                            "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                            "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                          }
                        }
                        fullWidth={true}
                        id="label-name"
                        inputComponent="input"
                        multiline={false}
                        name="name"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="text"
                        value=""
                      >
                        <div
                          className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                          onClick={[Function]}
                        >
                          <input
                            aria-describedby="label-name-helper-text"
                            aria-invalid={false}
                            autoFocus={true}
                            className="MuiInputBase-input MuiFilledInput-input"
                            disabled={false}
                            id="label-name"
                            name="name"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={true}
                            type="text"
                            value=""
                          />
                        </div>
                      </ForwardRef(InputBase)>
                    </WithStyles(ForwardRef(InputBase))>
                  </ForwardRef(FilledInput)>
                </WithStyles(ForwardRef(FilledInput))>
                <WithStyles(ForwardRef(FormHelperText))
                  id="label-name-helper-text"
                >
                  <ForwardRef(FormHelperText)
                    classes={
                      Object {
                        "contained": "MuiFormHelperText-contained",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "filled": "MuiFormHelperText-filled",
                        "focused": "Mui-focused",
                        "marginDense": "MuiFormHelperText-marginDense",
                        "required": "Mui-required",
                        "root": "MuiFormHelperText-root",
                      }
                    }
                    id="label-name-helper-text"
                  >
                    <p
                      className="MuiFormHelperText-root MuiFormHelperText-contained Mui-focused Mui-required"
                      id="label-name-helper-text"
                    >
                      <span
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "&#8203;",
                          }
                        }
                      />
                    </p>
                  </ForwardRef(FormHelperText)>
                </WithStyles(ForwardRef(FormHelperText))>
              </div>
            </ForwardRef(FormControl)>
          </WithStyles(ForwardRef(FormControl))>
        </ForwardRef(TextField)>
      </WithStyles(ForwardRef(TextField))>
      <Styled(WithStyles(ForwardRef(TextField)))
        fullWidth={true}
        id="label-color"
        label="Label color"
        margin="normal"
        name="color"
        onChange={[Function]}
        required={true}
        select={true}
        value=""
        variant="filled"
      >
        <WithStyles(ForwardRef(TextField))
          className="sc-AxjAm aCzVY"
          fullWidth={true}
          id="label-color"
          label="Label color"
          margin="normal"
          name="color"
          onChange={[Function]}
          required={true}
          select={true}
          value=""
          variant="filled"
        >
          <ForwardRef(TextField)
            className="sc-AxjAm aCzVY"
            classes={
              Object {
                "root": "MuiTextField-root",
              }
            }
            fullWidth={true}
            id="label-color"
            label="Label color"
            margin="normal"
            name="color"
            onChange={[Function]}
            required={true}
            select={true}
            value=""
            variant="filled"
          >
            <WithStyles(ForwardRef(FormControl))
              className="MuiTextField-root sc-AxjAm aCzVY"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={true}
              margin="normal"
              required={true}
              variant="filled"
            >
              <ForwardRef(FormControl)
                className="MuiTextField-root sc-AxjAm aCzVY"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                color="primary"
                disabled={false}
                error={false}
                fullWidth={true}
                margin="normal"
                required={true}
                variant="filled"
              >
                <div
                  className="MuiFormControl-root MuiTextField-root sc-AxjAm aCzVY MuiFormControl-marginNormal MuiFormControl-fullWidth"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    htmlFor="label-color"
                    id="label-color-label"
                  >
                    <ForwardRef(InputLabel)
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="label-color"
                      id="label-color-label"
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={false}
                        htmlFor="label-color"
                        id="label-color-label"
                      >
                        <ForwardRef(FormLabel)
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={false}
                          htmlFor="label-color"
                          id="label-color-label"
                        >
                          <label
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled Mui-required Mui-required"
                            data-shrink={false}
                            htmlFor="label-color"
                            id="label-color-label"
                          >
                            Label color
                            <span
                              aria-hidden={true}
                              className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                            >
                              â€‰
                              *
                            </span>
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(Select))
                    id="label-color"
                    input={
                      <ForwardRef(WithStyles)
                        autoFocus={false}
                        fullWidth={true}
                        multiline={false}
                        name="color"
                        onChange={[Function]}
                        value=""
                      />
                    }
                    labelId="label-color-label"
                    value=""
                  >
                    <ForwardRef(Select)
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "filled": "MuiSelect-filled",
                          "icon": "MuiSelect-icon",
                          "iconFilled": "MuiSelect-iconFilled",
                          "iconOpen": "MuiSelect-iconOpen",
                          "iconOutlined": "MuiSelect-iconOutlined",
                          "outlined": "MuiSelect-outlined",
                          "root": "MuiSelect-root",
                          "select": "MuiSelect-select",
                          "selectMenu": "MuiSelect-selectMenu",
                        }
                      }
                      id="label-color"
                      input={
                        <ForwardRef(WithStyles)
                          autoFocus={false}
                          fullWidth={true}
                          multiline={false}
                          name="color"
                          onChange={[Function]}
                          value=""
                        />
                      }
                      labelId="label-color-label"
                      value=""
                    >
                      <WithStyles(ForwardRef(FilledInput))
                        autoFocus={false}
                        fullWidth={true}
                        inputComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "IconComponent": [Function],
                              "MenuProps": [Function],
                              "SelectDisplayProps": [Function],
                              "aria-label": [Function],
                              "autoFocus": [Function],
                              "autoWidth": [Function],
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "defaultValue": [Function],
                              "disabled": [Function],
                              "displayEmpty": [Function],
                              "inputRef": [Function],
                              "labelId": [Function],
                              "multiple": [Function],
                              "name": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onClose": [Function],
                              "onFocus": [Function],
                              "onOpen": [Function],
                              "open": [Function],
                              "readOnly": [Function],
                              "renderValue": [Function],
                              "required": [Function],
                              "tabIndex": [Function],
                              "type": [Function],
                              "value": [Function],
                              "variant": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        inputProps={
                          Object {
                            "IconComponent": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "ArrowDropDownIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "MenuProps": undefined,
                            "SelectDisplayProps": Object {
                              "id": "label-color",
                            },
                            "autoWidth": false,
                            "children": Array [
                              <ForwardRef(WithStyles)
                                value="#f44336"
                              >
                                <ForwardRef(styled.span)
                                  color="#f44336"
                                />
                                <span>
                                  Red
                                </span>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="#673ab7"
                              >
                                <ForwardRef(styled.span)
                                  color="#673ab7"
                                />
                                <span>
                                  Deep Purple
                                </span>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="#2196f3"
                              >
                                <ForwardRef(styled.span)
                                  color="#2196f3"
                                />
                                <span>
                                  Blue
                                </span>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="#00bcd4"
                              >
                                <ForwardRef(styled.span)
                                  color="#00bcd4"
                                />
                                <span>
                                  Cyan
                                </span>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="#009688"
                              >
                                <ForwardRef(styled.span)
                                  color="#009688"
                                />
                                <span>
                                  Teal
                                </span>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="#ff5722"
                              >
                                <ForwardRef(styled.span)
                                  color="#ff5722"
                                />
                                <span>
                                  Deep Orange
                                </span>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="#4caf50"
                              >
                                <ForwardRef(styled.span)
                                  color="#4caf50"
                                />
                                <span>
                                  Green
                                </span>
                              </ForwardRef(WithStyles)>,
                              <ForwardRef(WithStyles)
                                value="#ffeb3b"
                              >
                                <ForwardRef(styled.span)
                                  color="#ffeb3b"
                                />
                                <span>
                                  Yellow
                                </span>
                              </ForwardRef(WithStyles)>,
                            ],
                            "classes": Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            },
                            "displayEmpty": false,
                            "labelId": "label-color-label",
                            "multiple": false,
                            "onClose": undefined,
                            "onOpen": undefined,
                            "open": undefined,
                            "renderValue": undefined,
                            "type": undefined,
                            "variant": "filled",
                          }
                        }
                        multiline={false}
                        name="color"
                        onChange={[Function]}
                        value=""
                      >
                        <ForwardRef(FilledInput)
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiFilledInput-adornedEnd",
                              "adornedStart": "MuiFilledInput-adornedStart",
                              "colorSecondary": "MuiFilledInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiFilledInput-input",
                              "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                              "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                              "inputMarginDense": "MuiFilledInput-inputMarginDense",
                              "inputMultiline": "MuiFilledInput-inputMultiline",
                              "marginDense": "MuiFilledInput-marginDense",
                              "multiline": "MuiFilledInput-multiline",
                              "root": "MuiFilledInput-root",
                              "underline": "MuiFilledInput-underline",
                            }
                          }
                          fullWidth={true}
                          inputComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "aria-label": [Function],
                                "autoFocus": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "displayEmpty": [Function],
                                "inputRef": [Function],
                                "labelId": [Function],
                                "multiple": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onFocus": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "readOnly": [Function],
                                "renderValue": [Function],
                                "required": [Function],
                                "tabIndex": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          inputProps={
                            Object {
                              "IconComponent": Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "displayName": "ArrowDropDownIcon",
                                "muiName": "SvgIcon",
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              },
                              "MenuProps": undefined,
                              "SelectDisplayProps": Object {
                                "id": "label-color",
                              },
                              "autoWidth": false,
                              "children": Array [
                                <ForwardRef(WithStyles)
                                  value="#f44336"
                                >
                                  <ForwardRef(styled.span)
                                    color="#f44336"
                                  />
                                  <span>
                                    Red
                                  </span>
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="#673ab7"
                                >
                                  <ForwardRef(styled.span)
                                    color="#673ab7"
                                  />
                                  <span>
                                    Deep Purple
                                  </span>
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="#2196f3"
                                >
                                  <ForwardRef(styled.span)
                                    color="#2196f3"
                                  />
                                  <span>
                                    Blue
                                  </span>
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="#00bcd4"
                                >
                                  <ForwardRef(styled.span)
                                    color="#00bcd4"
                                  />
                                  <span>
                                    Cyan
                                  </span>
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="#009688"
                                >
                                  <ForwardRef(styled.span)
                                    color="#009688"
                                  />
                                  <span>
                                    Teal
                                  </span>
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="#ff5722"
                                >
                                  <ForwardRef(styled.span)
                                    color="#ff5722"
                                  />
                                  <span>
                                    Deep Orange
                                  </span>
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="#4caf50"
                                >
                                  <ForwardRef(styled.span)
                                    color="#4caf50"
                                  />
                                  <span>
                                    Green
                                  </span>
                                </ForwardRef(WithStyles)>,
                                <ForwardRef(WithStyles)
                                  value="#ffeb3b"
                                >
                                  <ForwardRef(styled.span)
                                    color="#ffeb3b"
                                  />
                                  <span>
                                    Yellow
                                  </span>
                                </ForwardRef(WithStyles)>,
                              ],
                              "classes": Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              },
                              "displayEmpty": false,
                              "labelId": "label-color-label",
                              "multiple": false,
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": "filled",
                            }
                          }
                          multiline={false}
                          name="color"
                          onChange={[Function]}
                          value=""
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            classes={
                              Object {
                                "adornedEnd": "MuiFilledInput-adornedEnd",
                                "adornedStart": "MuiFilledInput-adornedStart",
                                "colorSecondary": "MuiFilledInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiFilledInput-input",
                                "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                "inputMultiline": "MuiFilledInput-inputMultiline",
                                "marginDense": "MuiFilledInput-marginDense",
                                "multiline": "MuiFilledInput-multiline",
                                "root": "MuiFilledInput-root MuiFilledInput-underline",
                                "underline": null,
                              }
                            }
                            fullWidth={true}
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "required": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": "label-color",
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <ForwardRef(WithStyles)
                                    value="#f44336"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#f44336"
                                    />
                                    <span>
                                      Red
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="#673ab7"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#673ab7"
                                    />
                                    <span>
                                      Deep Purple
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="#2196f3"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#2196f3"
                                    />
                                    <span>
                                      Blue
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="#00bcd4"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#00bcd4"
                                    />
                                    <span>
                                      Cyan
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="#009688"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#009688"
                                    />
                                    <span>
                                      Teal
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="#ff5722"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#ff5722"
                                    />
                                    <span>
                                      Deep Orange
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="#4caf50"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#4caf50"
                                    />
                                    <span>
                                      Green
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                  <ForwardRef(WithStyles)
                                    value="#ffeb3b"
                                  >
                                    <ForwardRef(styled.span)
                                      color="#ffeb3b"
                                    />
                                    <span>
                                      Yellow
                                    </span>
                                  </ForwardRef(WithStyles)>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "labelId": "label-color-label",
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "filled",
                              }
                            }
                            multiline={false}
                            name="color"
                            onChange={[Function]}
                            type="text"
                            value=""
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input MuiFilledInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                  "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                }
                              }
                              fullWidth={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "required": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": "label-color",
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <ForwardRef(WithStyles)
                                      value="#f44336"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#f44336"
                                      />
                                      <span>
                                        Red
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      value="#673ab7"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#673ab7"
                                      />
                                      <span>
                                        Deep Purple
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      value="#2196f3"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#2196f3"
                                      />
                                      <span>
                                        Blue
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      value="#00bcd4"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#00bcd4"
                                      />
                                      <span>
                                        Cyan
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      value="#009688"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#009688"
                                      />
                                      <span>
                                        Teal
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      value="#ff5722"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#ff5722"
                                      />
                                      <span>
                                        Deep Orange
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      value="#4caf50"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#4caf50"
                                      />
                                      <span>
                                        Green
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                    <ForwardRef(WithStyles)
                                      value="#ffeb3b"
                                    >
                                      <ForwardRef(styled.span)
                                        color="#ffeb3b"
                                      />
                                      <span>
                                        Yellow
                                      </span>
                                    </ForwardRef(WithStyles)>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "labelId": "label-color-label",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "filled",
                                }
                              }
                              multiline={false}
                              name="color"
                              onChange={[Function]}
                              type="text"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                onClick={[Function]}
                              >
                                <ForwardRef(SelectInput)
                                  IconComponent={
                                    Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "displayName": "ArrowDropDownIcon",
                                      "muiName": "SvgIcon",
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    }
                                  }
                                  SelectDisplayProps={
                                    Object {
                                      "id": "label-color",
                                    }
                                  }
                                  aria-invalid={false}
                                  autoFocus={false}
                                  autoWidth={false}
                                  className="MuiInputBase-input MuiFilledInput-input"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    }
                                  }
                                  disabled={false}
                                  displayEmpty={false}
                                  inputRef={[Function]}
                                  labelId="label-color-label"
                                  multiple={false}
                                  name="color"
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={true}
                                  value=""
                                  variant="filled"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="label-color-label label-color"
                                    className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                    id="label-color"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <span
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "&#8203;",
                                        }
                                      }
                                    />
                                  </div>
                                  <input
                                    autoFocus={false}
                                    name="color"
                                    onAnimationStart={[Function]}
                                    type="hidden"
                                    value=""
                                  />
                                  <ForwardRef
                                    className="MuiSelect-icon MuiSelect-iconFilled"
                                  >
                                    <WithStyles(ForwardRef(SvgIcon))
                                      className="MuiSelect-icon MuiSelect-iconFilled"
                                    >
                                      <ForwardRef(SvgIcon)
                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M7 10l5 5 5-5z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef>
                                  <WithStyles(ForwardRef(Menu))
                                    MenuListProps={
                                      Object {
                                        "aria-labelledby": "label-color-label",
                                        "disableListWrap": true,
                                        "role": "listbox",
                                      }
                                    }
                                    PaperProps={
                                      Object {
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="label-color-label label-color"
                                        class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                        id="label-color"
                                        role="button"
                                        tabindex="0"
                                      >
                                        <span>
                                          â€‹
                                        </span>
                                      </div>
                                    }
                                    id="menu-color"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Menu)
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": "label-color-label",
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="label-color-label label-color"
                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                          id="label-color"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <span>
                                            â€‹
                                          </span>
                                        </div>
                                      }
                                      classes={
                                        Object {
                                          "list": "MuiMenu-list",
                                          "paper": "MuiMenu-paper",
                                        }
                                      }
                                      id="menu-color"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <WithStyles(ForwardRef(Popover))
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="label-color-label label-color"
                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                            id="label-color"
                                            role="button"
                                            tabindex="0"
                                          >
                                            <span>
                                              â€‹
                                            </span>
                                          </div>
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        id="menu-color"
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Popover)
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="label-color-label label-color"
                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                              id="label-color"
                                              role="button"
                                              tabindex="0"
                                            >
                                              <span>
                                                â€‹
                                              </span>
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper",
                                              "root": "MuiPopover-root",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-color"
                                          onClose={[Function]}
                                          onEntering={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            className="MuiPopover-root"
                                            container={
                                              <body>
                                                <div
                                                  class="app"
                                                  id="app"
                                                >
                                                  <form
                                                    autocomplete="off"
                                                    novalidate=""
                                                  >
                                                    <div
                                                      class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                    >
                                                      <label
                                                        class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                        data-shrink="true"
                                                        for="label-name"
                                                        id="label-name-label"
                                                      >
                                                        Label name
                                                        <span
                                                          aria-hidden="true"
                                                          class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                        >
                                                          â€‰
                                                          *
                                                        </span>
                                                      </label>
                                                      <div
                                                        class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                      >
                                                        <input
                                                          aria-describedby="label-name-helper-text"
                                                          aria-invalid="false"
                                                          class="MuiInputBase-input MuiFilledInput-input"
                                                          id="label-name"
                                                          name="name"
                                                          required=""
                                                          type="text"
                                                          value=""
                                                        />
                                                      </div>
                                                      <p
                                                        class="MuiFormHelperText-root MuiFormHelperText-contained Mui-focused Mui-required"
                                                        id="label-name-helper-text"
                                                      >
                                                        <span>
                                                          â€‹
                                                        </span>
                                                      </p>
                                                    </div>
                                                    <div
                                                      class="MuiFormControl-root MuiTextField-root sc-AxjAm aCzVY MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                    >
                                                      <label
                                                        class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled Mui-required Mui-required"
                                                        data-shrink="false"
                                                        for="label-color"
                                                        id="label-color-label"
                                                      >
                                                        Label color
                                                        <span
                                                          aria-hidden="true"
                                                          class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                        >
                                                          â€‰
                                                          *
                                                        </span>
                                                      </label>
                                                      <div
                                                        class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                      >
                                                        <div
                                                          aria-haspopup="listbox"
                                                          aria-labelledby="label-color-label label-color"
                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                                          id="label-color"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          <span>
                                                            â€‹
                                                          </span>
                                                        </div>
                                                        <input
                                                          name="color"
                                                          type="hidden"
                                                          value=""
                                                        />
                                                        <svg
                                                          aria-hidden="true"
                                                          class="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </div>
                                                    </div>
                                                  </form>
                                                </div>
                                              </body>
                                            }
                                            id="menu-color"
                                            onClose={[Function]}
                                            open={false}
                                          />
                                        </ForwardRef(Popover)>
                                      </WithStyles(ForwardRef(Popover))>
                                    </ForwardRef(Menu)>
                                  </WithStyles(ForwardRef(Menu))>
                                </ForwardRef(SelectInput)>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(FilledInput)>
                      </WithStyles(ForwardRef(FilledInput))>
                    </ForwardRef(Select)>
                  </WithStyles(ForwardRef(Select))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </ForwardRef(TextField)>
        </WithStyles(ForwardRef(TextField))>
      </Styled(WithStyles(ForwardRef(TextField)))>
    </form>
  </LabelForm>
</Provider>
`;
