// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FullscreenDialog /> should render <FullscreenDialog /> correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <FullscreenDialog>
    <WithStyles(ForwardRef(Dialog))
      TransitionComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      aria-describedby="alert-dialog-description"
      fullScreen={true}
      onClose={[Function]}
      open={true}
    >
      <ForwardRef(Dialog)
        TransitionComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        aria-describedby="alert-dialog-description"
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullScreen={true}
        onClose={[Function]}
        open={true}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "displayName": "WithStyles(ForwardRef(Backdrop))",
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          onClose={[Function]}
          open={true}
        >
          <ForwardRef(Portal)
            disablePortal={false}
          >
            <Portal
              containerInfo={
                <body
                  style="padding-right: 0px; overflow: hidden;"
                >
                  <div
                    aria-hidden="true"
                    class="app"
                    id="app"
                  />
                  <div
                    class="MuiDialog-root"
                    role="presentation"
                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                  >
                    <div
                      aria-hidden="true"
                      class="MuiBackdrop-root"
                      style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    />
                    <div
                      data-test="sentinelStart"
                      tabindex="0"
                    />
                    <div
                      class="MuiDialog-container MuiDialog-scrollPaper"
                      role="none presentation"
                      style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                      tabindex="-1"
                    >
                      <div
                        aria-describedby="alert-dialog-description"
                        class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullScreen MuiPaper-elevation24 MuiPaper-rounded"
                        role="dialog"
                      >
                        <header
                          class="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-AxhCb jZxptO mui-fixed MuiPaper-elevation4"
                          style="padding-right: 0px;"
                        >
                          <div
                            class="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                          >
                            <button
                              aria-label="close"
                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
                              tabindex="0"
                              type="button"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  />
                                </svg>
                              </span>
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </button>
                            <h6
                              class="MuiTypography-root sc-AxhUy eoaQEg MuiTypography-h6"
                            >
                              Create
                               Label
                            </h6>
                            <button
                              aria-label="save label"
                              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                              disabled=""
                              tabindex="-1"
                              type="button"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
                                  />
                                </svg>
                              </span>
                            </button>
                          </div>
                        </header>
                        <div
                          class="MuiDialogContent-root"
                        >
                          <form
                            autocomplete="off"
                            novalidate=""
                          >
                            <div
                              class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                            >
                              <label
                                class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                data-shrink="true"
                                for="label-name"
                                id="label-name-label"
                              >
                                Label name
                                <span
                                  aria-hidden="true"
                                  class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                >
                                   
                                  *
                                </span>
                              </label>
                              <div
                                class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                              >
                                <input
                                  aria-describedby="label-name-helper-text"
                                  aria-invalid="false"
                                  class="MuiInputBase-input MuiFilledInput-input"
                                  id="label-name"
                                  name="name"
                                  required=""
                                  type="text"
                                  value=""
                                />
                              </div>
                              <p
                                class="MuiFormHelperText-root MuiFormHelperText-contained Mui-focused Mui-required"
                                id="label-name-helper-text"
                              >
                                <span>
                                  ​
                                </span>
                              </p>
                            </div>
                            <div
                              class="MuiFormControl-root MuiTextField-root sc-AxjAm aCzVY MuiFormControl-marginNormal MuiFormControl-fullWidth"
                            >
                              <label
                                class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled Mui-required Mui-required"
                                data-shrink="false"
                                for="label-color"
                                id="label-color-label"
                              >
                                Label color
                                <span
                                  aria-hidden="true"
                                  class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                >
                                   
                                  *
                                </span>
                              </label>
                              <div
                                class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                              >
                                <div
                                  aria-haspopup="listbox"
                                  aria-labelledby="label-color-label label-color"
                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                  id="label-color"
                                  role="button"
                                  tabindex="0"
                                >
                                  <span>
                                    ​
                                  </span>
                                </div>
                                <input
                                  name="color"
                                  type="hidden"
                                  value=""
                                />
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M7 10l5 5 5-5z"
                                  />
                                </svg>
                              </div>
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>
                    <div
                      data-test="sentinelEnd"
                      tabindex="0"
                    />
                  </div>
                </body>
              }
            >
              <div
                className="MuiDialog-root"
                onKeyDown={[Function]}
                role="presentation"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                    "zIndex": 1300,
                  }
                }
              >
                <WithStyles(ForwardRef(Backdrop))
                  onClick={[Function]}
                  open={true}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <ForwardRef(Backdrop)
                    classes={
                      Object {
                        "invisible": "MuiBackdrop-invisible",
                        "root": "MuiBackdrop-root",
                      }
                    }
                    onClick={[Function]}
                    open={true}
                    transitionDuration={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <ForwardRef(Fade)
                      in={true}
                      onClick={[Function]}
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                    >
                      <Transition
                        appear={true}
                        enter={true}
                        exit={true}
                        in={true}
                        mountOnEnter={false}
                        onClick={[Function]}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                        unmountOnExit={false}
                      >
                        <div
                          aria-hidden={true}
                          className="MuiBackdrop-root"
                          onClick={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                              "visibility": undefined,
                            }
                          }
                        />
                      </Transition>
                    </ForwardRef(Fade)>
                  </ForwardRef(Backdrop)>
                </WithStyles(ForwardRef(Backdrop))>
                <TrapFocus
                  disableAutoFocus={false}
                  disableEnforceFocus={false}
                  disableRestoreFocus={false}
                  getDoc={[Function]}
                  isEnabled={[Function]}
                  open={true}
                >
                  <div
                    data-test="sentinelStart"
                    tabIndex={0}
                  />
                  <ForwardRef(Transition)
                    appear={true}
                    in={true}
                    onEnter={[Function]}
                    onExited={[Function]}
                    role="none presentation"
                    tabIndex="-1"
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <ForwardRef(Slide)
                      appear={true}
                      direction="up"
                      in={true}
                      onEnter={[Function]}
                      onExited={[Function]}
                      role="none presentation"
                      tabIndex="-1"
                      timeout={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                    >
                      <Transition
                        appear={true}
                        enter={true}
                        exit={true}
                        in={true}
                        mountOnEnter={false}
                        nodeRef={
                          Object {
                            "current": <div
                              class="MuiDialog-container MuiDialog-scrollPaper"
                              role="none presentation"
                              style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                              tabindex="-1"
                            >
                              <div
                                aria-describedby="alert-dialog-description"
                                class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullScreen MuiPaper-elevation24 MuiPaper-rounded"
                                role="dialog"
                              >
                                <header
                                  class="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-AxhCb jZxptO mui-fixed MuiPaper-elevation4"
                                  style="padding-right: 0px;"
                                >
                                  <div
                                    class="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                                  >
                                    <button
                                      aria-label="close"
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                      tabindex="0"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                    <h6
                                      class="MuiTypography-root sc-AxhUy eoaQEg MuiTypography-h6"
                                    >
                                      Create
                                       Label
                                    </h6>
                                    <button
                                      aria-label="save label"
                                      class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                      disabled=""
                                      tabindex="-1"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
                                          />
                                        </svg>
                                      </span>
                                    </button>
                                  </div>
                                </header>
                                <div
                                  class="MuiDialogContent-root"
                                >
                                  <form
                                    autocomplete="off"
                                    novalidate=""
                                  >
                                    <div
                                      class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                    >
                                      <label
                                        class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                        data-shrink="true"
                                        for="label-name"
                                        id="label-name-label"
                                      >
                                        Label name
                                        <span
                                          aria-hidden="true"
                                          class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                        >
                                           
                                          *
                                        </span>
                                      </label>
                                      <div
                                        class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                      >
                                        <input
                                          aria-describedby="label-name-helper-text"
                                          aria-invalid="false"
                                          class="MuiInputBase-input MuiFilledInput-input"
                                          id="label-name"
                                          name="name"
                                          required=""
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                      <p
                                        class="MuiFormHelperText-root MuiFormHelperText-contained Mui-focused Mui-required"
                                        id="label-name-helper-text"
                                      >
                                        <span>
                                          ​
                                        </span>
                                      </p>
                                    </div>
                                    <div
                                      class="MuiFormControl-root MuiTextField-root sc-AxjAm aCzVY MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                    >
                                      <label
                                        class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled Mui-required Mui-required"
                                        data-shrink="false"
                                        for="label-color"
                                        id="label-color-label"
                                      >
                                        Label color
                                        <span
                                          aria-hidden="true"
                                          class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                        >
                                           
                                          *
                                        </span>
                                      </label>
                                      <div
                                        class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                      >
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="label-color-label label-color"
                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                          id="label-color"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <span>
                                            ​
                                          </span>
                                        </div>
                                        <input
                                          name="color"
                                          type="hidden"
                                          value=""
                                        />
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M7 10l5 5 5-5z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </form>
                                </div>
                              </div>
                            </div>,
                          }
                        }
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        role="none presentation"
                        tabIndex="-1"
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                        unmountOnExit={false}
                      >
                        <div
                          className="MuiDialog-container MuiDialog-scrollPaper"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          role="none presentation"
                          style={
                            Object {
                              "visibility": undefined,
                            }
                          }
                          tabIndex="-1"
                        >
                          <WithStyles(ForwardRef(Paper))
                            aria-describedby="alert-dialog-description"
                            className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullScreen"
                            elevation={24}
                            role="dialog"
                          >
                            <ForwardRef(Paper)
                              aria-describedby="alert-dialog-description"
                              className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullScreen"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              elevation={24}
                              role="dialog"
                            >
                              <div
                                aria-describedby="alert-dialog-description"
                                className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullScreen MuiPaper-elevation24 MuiPaper-rounded"
                                role="dialog"
                              >
                                <Styled(WithStyles(ForwardRef(AppBar)))>
                                  <WithStyles(ForwardRef(AppBar))
                                    className="sc-AxhCb jZxptO"
                                  >
                                    <ForwardRef(AppBar)
                                      className="sc-AxhCb jZxptO"
                                      classes={
                                        Object {
                                          "colorDefault": "MuiAppBar-colorDefault",
                                          "colorInherit": "MuiAppBar-colorInherit",
                                          "colorPrimary": "MuiAppBar-colorPrimary",
                                          "colorSecondary": "MuiAppBar-colorSecondary",
                                          "colorTransparent": "MuiAppBar-colorTransparent",
                                          "positionAbsolute": "MuiAppBar-positionAbsolute",
                                          "positionFixed": "MuiAppBar-positionFixed",
                                          "positionRelative": "MuiAppBar-positionRelative",
                                          "positionStatic": "MuiAppBar-positionStatic",
                                          "positionSticky": "MuiAppBar-positionSticky",
                                          "root": "MuiAppBar-root",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Paper))
                                        className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-AxhCb jZxptO mui-fixed"
                                        component="header"
                                        elevation={4}
                                        square={true}
                                      >
                                        <ForwardRef(Paper)
                                          className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-AxhCb jZxptO mui-fixed"
                                          classes={
                                            Object {
                                              "elevation0": "MuiPaper-elevation0",
                                              "elevation1": "MuiPaper-elevation1",
                                              "elevation10": "MuiPaper-elevation10",
                                              "elevation11": "MuiPaper-elevation11",
                                              "elevation12": "MuiPaper-elevation12",
                                              "elevation13": "MuiPaper-elevation13",
                                              "elevation14": "MuiPaper-elevation14",
                                              "elevation15": "MuiPaper-elevation15",
                                              "elevation16": "MuiPaper-elevation16",
                                              "elevation17": "MuiPaper-elevation17",
                                              "elevation18": "MuiPaper-elevation18",
                                              "elevation19": "MuiPaper-elevation19",
                                              "elevation2": "MuiPaper-elevation2",
                                              "elevation20": "MuiPaper-elevation20",
                                              "elevation21": "MuiPaper-elevation21",
                                              "elevation22": "MuiPaper-elevation22",
                                              "elevation23": "MuiPaper-elevation23",
                                              "elevation24": "MuiPaper-elevation24",
                                              "elevation3": "MuiPaper-elevation3",
                                              "elevation4": "MuiPaper-elevation4",
                                              "elevation5": "MuiPaper-elevation5",
                                              "elevation6": "MuiPaper-elevation6",
                                              "elevation7": "MuiPaper-elevation7",
                                              "elevation8": "MuiPaper-elevation8",
                                              "elevation9": "MuiPaper-elevation9",
                                              "outlined": "MuiPaper-outlined",
                                              "root": "MuiPaper-root",
                                              "rounded": "MuiPaper-rounded",
                                            }
                                          }
                                          component="header"
                                          elevation={4}
                                          square={true}
                                        >
                                          <header
                                            className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-AxhCb jZxptO mui-fixed MuiPaper-elevation4"
                                          >
                                            <WithStyles(ForwardRef(Toolbar))>
                                              <ForwardRef(Toolbar)
                                                classes={
                                                  Object {
                                                    "dense": "MuiToolbar-dense",
                                                    "gutters": "MuiToolbar-gutters",
                                                    "regular": "MuiToolbar-regular",
                                                    "root": "MuiToolbar-root",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-label="close"
                                                    color="inherit"
                                                    edge="start"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-label="close"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      color="inherit"
                                                      edge="start"
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-label="close"
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-label="close"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          disabled={false}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <button
                                                            aria-label="close"
                                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                                            disabled={false}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={0}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef>
                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </button>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                  <Styled(WithStyles(ForwardRef(Typography)))
                                                    variant="h6"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="sc-AxhUy eoaQEg"
                                                      variant="h6"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="sc-AxhUy eoaQEg"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        variant="h6"
                                                      >
                                                        <h6
                                                          className="MuiTypography-root sc-AxhUy eoaQEg MuiTypography-h6"
                                                        >
                                                          Create
                                                           Label
                                                        </h6>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </Styled(WithStyles(ForwardRef(Typography)))>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-label="save label"
                                                    color="inherit"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-label="save label"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      color="inherit"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-label="save label"
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                        disabled={true}
                                                        focusRipple={true}
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-label="save label"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          disabled={true}
                                                          focusRipple={true}
                                                          onClick={[Function]}
                                                        >
                                                          <button
                                                            aria-label="save label"
                                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                            disabled={true}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={-1}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef>
                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef>
                                                            </span>
                                                          </button>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(Toolbar)>
                                            </WithStyles(ForwardRef(Toolbar))>
                                          </header>
                                        </ForwardRef(Paper)>
                                      </WithStyles(ForwardRef(Paper))>
                                    </ForwardRef(AppBar)>
                                  </WithStyles(ForwardRef(AppBar))>
                                </Styled(WithStyles(ForwardRef(AppBar)))>
                                <WithStyles(ForwardRef(DialogContent))>
                                  <ForwardRef(DialogContent)
                                    classes={
                                      Object {
                                        "dividers": "MuiDialogContent-dividers",
                                        "root": "MuiDialogContent-root",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiDialogContent-root"
                                    >
                                      <LabelForm>
                                        <form
                                          autoComplete="off"
                                          noValidate={true}
                                        >
                                          <WithStyles(ForwardRef(TextField))
                                            autoFocus={true}
                                            error={false}
                                            fullWidth={true}
                                            helperText=" "
                                            id="label-name"
                                            label="Label name"
                                            margin="normal"
                                            name="name"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            required={true}
                                            value=""
                                            variant="filled"
                                          >
                                            <ForwardRef(TextField)
                                              autoFocus={true}
                                              classes={
                                                Object {
                                                  "root": "MuiTextField-root",
                                                }
                                              }
                                              error={false}
                                              fullWidth={true}
                                              helperText=" "
                                              id="label-name"
                                              label="Label name"
                                              margin="normal"
                                              name="name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              required={true}
                                              value=""
                                              variant="filled"
                                            >
                                              <WithStyles(ForwardRef(FormControl))
                                                className="MuiTextField-root"
                                                color="primary"
                                                disabled={false}
                                                error={false}
                                                fullWidth={true}
                                                margin="normal"
                                                required={true}
                                                variant="filled"
                                              >
                                                <ForwardRef(FormControl)
                                                  className="MuiTextField-root"
                                                  classes={
                                                    Object {
                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                      "marginDense": "MuiFormControl-marginDense",
                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                      "root": "MuiFormControl-root",
                                                    }
                                                  }
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={true}
                                                  margin="normal"
                                                  required={true}
                                                  variant="filled"
                                                >
                                                  <div
                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                  >
                                                    <WithStyles(ForwardRef(InputLabel))
                                                      htmlFor="label-name"
                                                      id="label-name-label"
                                                    >
                                                      <ForwardRef(InputLabel)
                                                        classes={
                                                          Object {
                                                            "animated": "MuiInputLabel-animated",
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "filled": "MuiInputLabel-filled",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInputLabel-formControl",
                                                            "marginDense": "MuiInputLabel-marginDense",
                                                            "outlined": "MuiInputLabel-outlined",
                                                            "required": "Mui-required",
                                                            "root": "MuiInputLabel-root",
                                                            "shrink": "MuiInputLabel-shrink",
                                                          }
                                                        }
                                                        htmlFor="label-name"
                                                        id="label-name-label"
                                                      >
                                                        <WithStyles(ForwardRef(FormLabel))
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiInputLabel-asterisk",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "required": "Mui-required",
                                                            }
                                                          }
                                                          data-shrink={true}
                                                          htmlFor="label-name"
                                                          id="label-name-label"
                                                        >
                                                          <ForwardRef(FormLabel)
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "filled": "MuiFormLabel-filled",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "required": "Mui-required Mui-required",
                                                                "root": "MuiFormLabel-root",
                                                              }
                                                            }
                                                            data-shrink={true}
                                                            htmlFor="label-name"
                                                            id="label-name-label"
                                                          >
                                                            <label
                                                              className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                              data-shrink={true}
                                                              htmlFor="label-name"
                                                              id="label-name-label"
                                                            >
                                                              Label name
                                                              <span
                                                                aria-hidden={true}
                                                                className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                              >
                                                                 
                                                                *
                                                              </span>
                                                            </label>
                                                          </ForwardRef(FormLabel)>
                                                        </WithStyles(ForwardRef(FormLabel))>
                                                      </ForwardRef(InputLabel)>
                                                    </WithStyles(ForwardRef(InputLabel))>
                                                    <WithStyles(ForwardRef(FilledInput))
                                                      aria-describedby="label-name-helper-text"
                                                      autoFocus={true}
                                                      fullWidth={true}
                                                      id="label-name"
                                                      multiline={false}
                                                      name="name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      value=""
                                                    >
                                                      <ForwardRef(FilledInput)
                                                        aria-describedby="label-name-helper-text"
                                                        autoFocus={true}
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiFilledInput-adornedEnd",
                                                            "adornedStart": "MuiFilledInput-adornedStart",
                                                            "colorSecondary": "MuiFilledInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "input": "MuiFilledInput-input",
                                                            "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                            "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                            "inputMultiline": "MuiFilledInput-inputMultiline",
                                                            "marginDense": "MuiFilledInput-marginDense",
                                                            "multiline": "MuiFilledInput-multiline",
                                                            "root": "MuiFilledInput-root",
                                                            "underline": "MuiFilledInput-underline",
                                                          }
                                                        }
                                                        fullWidth={true}
                                                        id="label-name"
                                                        multiline={false}
                                                        name="name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        value=""
                                                      >
                                                        <WithStyles(ForwardRef(InputBase))
                                                          aria-describedby="label-name-helper-text"
                                                          autoFocus={true}
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiFilledInput-adornedEnd",
                                                              "adornedStart": "MuiFilledInput-adornedStart",
                                                              "colorSecondary": "MuiFilledInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "input": "MuiFilledInput-input",
                                                              "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                              "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                              "inputMultiline": "MuiFilledInput-inputMultiline",
                                                              "marginDense": "MuiFilledInput-marginDense",
                                                              "multiline": "MuiFilledInput-multiline",
                                                              "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                              "underline": null,
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          id="label-name"
                                                          inputComponent="input"
                                                          multiline={false}
                                                          name="name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          type="text"
                                                          value=""
                                                        >
                                                          <ForwardRef(InputBase)
                                                            aria-describedby="label-name-helper-text"
                                                            autoFocus={true}
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                "error": "Mui-error Mui-error",
                                                                "focused": "Mui-focused Mui-focused",
                                                                "formControl": "MuiInputBase-formControl",
                                                                "fullWidth": "MuiInputBase-fullWidth",
                                                                "input": "MuiInputBase-input MuiFilledInput-input",
                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            id="label-name"
                                                            inputComponent="input"
                                                            multiline={false}
                                                            name="name"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <div
                                                              className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                              onClick={[Function]}
                                                            >
                                                              <input
                                                                aria-describedby="label-name-helper-text"
                                                                aria-invalid={false}
                                                                autoFocus={true}
                                                                className="MuiInputBase-input MuiFilledInput-input"
                                                                disabled={false}
                                                                id="label-name"
                                                                name="name"
                                                                onAnimationStart={[Function]}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                required={true}
                                                                type="text"
                                                                value=""
                                                              />
                                                            </div>
                                                          </ForwardRef(InputBase)>
                                                        </WithStyles(ForwardRef(InputBase))>
                                                      </ForwardRef(FilledInput)>
                                                    </WithStyles(ForwardRef(FilledInput))>
                                                    <WithStyles(ForwardRef(FormHelperText))
                                                      id="label-name-helper-text"
                                                    >
                                                      <ForwardRef(FormHelperText)
                                                        classes={
                                                          Object {
                                                            "contained": "MuiFormHelperText-contained",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "filled": "MuiFormHelperText-filled",
                                                            "focused": "Mui-focused",
                                                            "marginDense": "MuiFormHelperText-marginDense",
                                                            "required": "Mui-required",
                                                            "root": "MuiFormHelperText-root",
                                                          }
                                                        }
                                                        id="label-name-helper-text"
                                                      >
                                                        <p
                                                          className="MuiFormHelperText-root MuiFormHelperText-contained Mui-focused Mui-required"
                                                          id="label-name-helper-text"
                                                        >
                                                          <span
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "&#8203;",
                                                              }
                                                            }
                                                          />
                                                        </p>
                                                      </ForwardRef(FormHelperText)>
                                                    </WithStyles(ForwardRef(FormHelperText))>
                                                  </div>
                                                </ForwardRef(FormControl)>
                                              </WithStyles(ForwardRef(FormControl))>
                                            </ForwardRef(TextField)>
                                          </WithStyles(ForwardRef(TextField))>
                                          <Styled(WithStyles(ForwardRef(TextField)))
                                            fullWidth={true}
                                            id="label-color"
                                            label="Label color"
                                            margin="normal"
                                            name="color"
                                            onChange={[Function]}
                                            required={true}
                                            select={true}
                                            value=""
                                            variant="filled"
                                          >
                                            <WithStyles(ForwardRef(TextField))
                                              className="sc-AxjAm aCzVY"
                                              fullWidth={true}
                                              id="label-color"
                                              label="Label color"
                                              margin="normal"
                                              name="color"
                                              onChange={[Function]}
                                              required={true}
                                              select={true}
                                              value=""
                                              variant="filled"
                                            >
                                              <ForwardRef(TextField)
                                                className="sc-AxjAm aCzVY"
                                                classes={
                                                  Object {
                                                    "root": "MuiTextField-root",
                                                  }
                                                }
                                                fullWidth={true}
                                                id="label-color"
                                                label="Label color"
                                                margin="normal"
                                                name="color"
                                                onChange={[Function]}
                                                required={true}
                                                select={true}
                                                value=""
                                                variant="filled"
                                              >
                                                <WithStyles(ForwardRef(FormControl))
                                                  className="MuiTextField-root sc-AxjAm aCzVY"
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={true}
                                                  margin="normal"
                                                  required={true}
                                                  variant="filled"
                                                >
                                                  <ForwardRef(FormControl)
                                                    className="MuiTextField-root sc-AxjAm aCzVY"
                                                    classes={
                                                      Object {
                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                        "marginDense": "MuiFormControl-marginDense",
                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                        "root": "MuiFormControl-root",
                                                      }
                                                    }
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    margin="normal"
                                                    required={true}
                                                    variant="filled"
                                                  >
                                                    <div
                                                      className="MuiFormControl-root MuiTextField-root sc-AxjAm aCzVY MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                    >
                                                      <WithStyles(ForwardRef(InputLabel))
                                                        htmlFor="label-color"
                                                        id="label-color-label"
                                                      >
                                                        <ForwardRef(InputLabel)
                                                          classes={
                                                            Object {
                                                              "animated": "MuiInputLabel-animated",
                                                              "asterisk": "MuiInputLabel-asterisk",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "filled": "MuiInputLabel-filled",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInputLabel-formControl",
                                                              "marginDense": "MuiInputLabel-marginDense",
                                                              "outlined": "MuiInputLabel-outlined",
                                                              "required": "Mui-required",
                                                              "root": "MuiInputLabel-root",
                                                              "shrink": "MuiInputLabel-shrink",
                                                            }
                                                          }
                                                          htmlFor="label-color"
                                                          id="label-color-label"
                                                        >
                                                          <WithStyles(ForwardRef(FormLabel))
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "required": "Mui-required",
                                                              }
                                                            }
                                                            data-shrink={false}
                                                            htmlFor="label-color"
                                                            id="label-color-label"
                                                          >
                                                            <ForwardRef(FormLabel)
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "filled": "MuiFormLabel-filled",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "required": "Mui-required Mui-required",
                                                                  "root": "MuiFormLabel-root",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                              htmlFor="label-color"
                                                              id="label-color-label"
                                                            >
                                                              <label
                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled Mui-required Mui-required"
                                                                data-shrink={false}
                                                                htmlFor="label-color"
                                                                id="label-color-label"
                                                              >
                                                                Label color
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                >
                                                                   
                                                                  *
                                                                </span>
                                                              </label>
                                                            </ForwardRef(FormLabel)>
                                                          </WithStyles(ForwardRef(FormLabel))>
                                                        </ForwardRef(InputLabel)>
                                                      </WithStyles(ForwardRef(InputLabel))>
                                                      <WithStyles(ForwardRef(Select))
                                                        id="label-color"
                                                        input={
                                                          <ForwardRef(WithStyles)
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            multiline={false}
                                                            name="color"
                                                            onChange={[Function]}
                                                            value=""
                                                          />
                                                        }
                                                        labelId="label-color-label"
                                                        value=""
                                                      >
                                                        <ForwardRef(Select)
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            }
                                                          }
                                                          id="label-color"
                                                          input={
                                                            <ForwardRef(WithStyles)
                                                              autoFocus={false}
                                                              fullWidth={true}
                                                              multiline={false}
                                                              name="color"
                                                              onChange={[Function]}
                                                              value=""
                                                            />
                                                          }
                                                          labelId="label-color-label"
                                                          value=""
                                                        >
                                                          <WithStyles(ForwardRef(FilledInput))
                                                            autoFocus={false}
                                                            fullWidth={true}
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "required": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "displayName": "ArrowDropDownIcon",
                                                                  "muiName": "SvgIcon",
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": "label-color",
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <ForwardRef(WithStyles)
                                                                    value="#f44336"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#f44336"
                                                                    />
                                                                    <span>
                                                                      Red
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                  <ForwardRef(WithStyles)
                                                                    value="#673ab7"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#673ab7"
                                                                    />
                                                                    <span>
                                                                      Deep Purple
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                  <ForwardRef(WithStyles)
                                                                    value="#2196f3"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#2196f3"
                                                                    />
                                                                    <span>
                                                                      Blue
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                  <ForwardRef(WithStyles)
                                                                    value="#00bcd4"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#00bcd4"
                                                                    />
                                                                    <span>
                                                                      Cyan
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                  <ForwardRef(WithStyles)
                                                                    value="#009688"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#009688"
                                                                    />
                                                                    <span>
                                                                      Teal
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                  <ForwardRef(WithStyles)
                                                                    value="#ff5722"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#ff5722"
                                                                    />
                                                                    <span>
                                                                      Deep Orange
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                  <ForwardRef(WithStyles)
                                                                    value="#4caf50"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#4caf50"
                                                                    />
                                                                    <span>
                                                                      Green
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                  <ForwardRef(WithStyles)
                                                                    value="#ffeb3b"
                                                                  >
                                                                    <ForwardRef(styled.span)
                                                                      color="#ffeb3b"
                                                                    />
                                                                    <span>
                                                                      Yellow
                                                                    </span>
                                                                  </ForwardRef(WithStyles)>,
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": false,
                                                                "labelId": "label-color-label",
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "filled",
                                                              }
                                                            }
                                                            multiline={false}
                                                            name="color"
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <ForwardRef(FilledInput)
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                  "adornedStart": "MuiFilledInput-adornedStart",
                                                                  "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiFilledInput-input",
                                                                  "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                  "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                  "marginDense": "MuiFilledInput-marginDense",
                                                                  "multiline": "MuiFilledInput-multiline",
                                                                  "root": "MuiFilledInput-root",
                                                                  "underline": "MuiFilledInput-underline",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "required": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "displayName": "ArrowDropDownIcon",
                                                                    "muiName": "SvgIcon",
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": "label-color",
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <ForwardRef(WithStyles)
                                                                      value="#f44336"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#f44336"
                                                                      />
                                                                      <span>
                                                                        Red
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                    <ForwardRef(WithStyles)
                                                                      value="#673ab7"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#673ab7"
                                                                      />
                                                                      <span>
                                                                        Deep Purple
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                    <ForwardRef(WithStyles)
                                                                      value="#2196f3"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#2196f3"
                                                                      />
                                                                      <span>
                                                                        Blue
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                    <ForwardRef(WithStyles)
                                                                      value="#00bcd4"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#00bcd4"
                                                                      />
                                                                      <span>
                                                                        Cyan
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                    <ForwardRef(WithStyles)
                                                                      value="#009688"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#009688"
                                                                      />
                                                                      <span>
                                                                        Teal
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                    <ForwardRef(WithStyles)
                                                                      value="#ff5722"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#ff5722"
                                                                      />
                                                                      <span>
                                                                        Deep Orange
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                    <ForwardRef(WithStyles)
                                                                      value="#4caf50"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#4caf50"
                                                                      />
                                                                      <span>
                                                                        Green
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                    <ForwardRef(WithStyles)
                                                                      value="#ffeb3b"
                                                                    >
                                                                      <ForwardRef(styled.span)
                                                                        color="#ffeb3b"
                                                                      />
                                                                      <span>
                                                                        Yellow
                                                                      </span>
                                                                    </ForwardRef(WithStyles)>,
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": "label-color-label",
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                              multiline={false}
                                                              name="color"
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiFilledInput-adornedEnd",
                                                                    "adornedStart": "MuiFilledInput-adornedStart",
                                                                    "colorSecondary": "MuiFilledInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiFilledInput-input",
                                                                    "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                                                    "inputMultiline": "MuiFilledInput-inputMultiline",
                                                                    "marginDense": "MuiFilledInput-marginDense",
                                                                    "multiline": "MuiFilledInput-multiline",
                                                                    "root": "MuiFilledInput-root MuiFilledInput-underline",
                                                                    "underline": null,
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "required": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "displayName": "ArrowDropDownIcon",
                                                                      "muiName": "SvgIcon",
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": "label-color",
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <ForwardRef(WithStyles)
                                                                        value="#f44336"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#f44336"
                                                                        />
                                                                        <span>
                                                                          Red
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                      <ForwardRef(WithStyles)
                                                                        value="#673ab7"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#673ab7"
                                                                        />
                                                                        <span>
                                                                          Deep Purple
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                      <ForwardRef(WithStyles)
                                                                        value="#2196f3"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#2196f3"
                                                                        />
                                                                        <span>
                                                                          Blue
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                      <ForwardRef(WithStyles)
                                                                        value="#00bcd4"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#00bcd4"
                                                                        />
                                                                        <span>
                                                                          Cyan
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                      <ForwardRef(WithStyles)
                                                                        value="#009688"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#009688"
                                                                        />
                                                                        <span>
                                                                          Teal
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                      <ForwardRef(WithStyles)
                                                                        value="#ff5722"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#ff5722"
                                                                        />
                                                                        <span>
                                                                          Deep Orange
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                      <ForwardRef(WithStyles)
                                                                        value="#4caf50"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#4caf50"
                                                                        />
                                                                        <span>
                                                                          Green
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                      <ForwardRef(WithStyles)
                                                                        value="#ffeb3b"
                                                                      >
                                                                        <ForwardRef(styled.span)
                                                                          color="#ffeb3b"
                                                                        />
                                                                        <span>
                                                                          Yellow
                                                                        </span>
                                                                      </ForwardRef(WithStyles)>,
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": false,
                                                                    "labelId": "label-color-label",
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                name="color"
                                                                onChange={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiFilledInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                                                      "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  inputComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "IconComponent": [Function],
                                                                        "MenuProps": [Function],
                                                                        "SelectDisplayProps": [Function],
                                                                        "aria-label": [Function],
                                                                        "autoFocus": [Function],
                                                                        "autoWidth": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "classes": [Function],
                                                                        "defaultValue": [Function],
                                                                        "disabled": [Function],
                                                                        "displayEmpty": [Function],
                                                                        "inputRef": [Function],
                                                                        "labelId": [Function],
                                                                        "multiple": [Function],
                                                                        "name": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onClose": [Function],
                                                                        "onFocus": [Function],
                                                                        "onOpen": [Function],
                                                                        "open": [Function],
                                                                        "readOnly": [Function],
                                                                        "renderValue": [Function],
                                                                        "required": [Function],
                                                                        "tabIndex": [Function],
                                                                        "type": [Function],
                                                                        "value": [Function],
                                                                        "variant": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  inputProps={
                                                                    Object {
                                                                      "IconComponent": Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "displayName": "ArrowDropDownIcon",
                                                                        "muiName": "SvgIcon",
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      },
                                                                      "MenuProps": undefined,
                                                                      "SelectDisplayProps": Object {
                                                                        "id": "label-color",
                                                                      },
                                                                      "autoWidth": false,
                                                                      "children": Array [
                                                                        <ForwardRef(WithStyles)
                                                                          value="#f44336"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#f44336"
                                                                          />
                                                                          <span>
                                                                            Red
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                        <ForwardRef(WithStyles)
                                                                          value="#673ab7"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#673ab7"
                                                                          />
                                                                          <span>
                                                                            Deep Purple
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                        <ForwardRef(WithStyles)
                                                                          value="#2196f3"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#2196f3"
                                                                          />
                                                                          <span>
                                                                            Blue
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                        <ForwardRef(WithStyles)
                                                                          value="#00bcd4"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#00bcd4"
                                                                          />
                                                                          <span>
                                                                            Cyan
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                        <ForwardRef(WithStyles)
                                                                          value="#009688"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#009688"
                                                                          />
                                                                          <span>
                                                                            Teal
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                        <ForwardRef(WithStyles)
                                                                          value="#ff5722"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#ff5722"
                                                                          />
                                                                          <span>
                                                                            Deep Orange
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                        <ForwardRef(WithStyles)
                                                                          value="#4caf50"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#4caf50"
                                                                          />
                                                                          <span>
                                                                            Green
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                        <ForwardRef(WithStyles)
                                                                          value="#ffeb3b"
                                                                        >
                                                                          <ForwardRef(styled.span)
                                                                            color="#ffeb3b"
                                                                          />
                                                                          <span>
                                                                            Yellow
                                                                          </span>
                                                                        </ForwardRef(WithStyles)>,
                                                                      ],
                                                                      "classes": Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      },
                                                                      "displayEmpty": false,
                                                                      "labelId": "label-color-label",
                                                                      "multiple": false,
                                                                      "onClose": undefined,
                                                                      "onOpen": undefined,
                                                                      "open": undefined,
                                                                      "renderValue": undefined,
                                                                      "type": undefined,
                                                                      "variant": "filled",
                                                                    }
                                                                  }
                                                                  multiline={false}
                                                                  name="color"
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <ForwardRef(SelectInput)
                                                                      IconComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.memo),
                                                                          "compare": null,
                                                                          "displayName": "ArrowDropDownIcon",
                                                                          "muiName": "SvgIcon",
                                                                          "type": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "render": [Function],
                                                                          },
                                                                        }
                                                                      }
                                                                      SelectDisplayProps={
                                                                        Object {
                                                                          "id": "label-color",
                                                                        }
                                                                      }
                                                                      aria-invalid={false}
                                                                      autoFocus={false}
                                                                      autoWidth={false}
                                                                      className="MuiInputBase-input MuiFilledInput-input"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "filled": "MuiSelect-filled",
                                                                          "icon": "MuiSelect-icon",
                                                                          "iconFilled": "MuiSelect-iconFilled",
                                                                          "iconOpen": "MuiSelect-iconOpen",
                                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                                          "outlined": "MuiSelect-outlined",
                                                                          "root": "MuiSelect-root",
                                                                          "select": "MuiSelect-select",
                                                                          "selectMenu": "MuiSelect-selectMenu",
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      displayEmpty={false}
                                                                      inputRef={[Function]}
                                                                      labelId="label-color-label"
                                                                      multiple={false}
                                                                      name="color"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={true}
                                                                      value=""
                                                                      variant="filled"
                                                                    >
                                                                      <div
                                                                        aria-haspopup="listbox"
                                                                        aria-labelledby="label-color-label label-color"
                                                                        className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                                                        id="label-color"
                                                                        onBlur={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                      >
                                                                        <span
                                                                          dangerouslySetInnerHTML={
                                                                            Object {
                                                                              "__html": "&#8203;",
                                                                            }
                                                                          }
                                                                        />
                                                                      </div>
                                                                      <input
                                                                        autoFocus={false}
                                                                        name="color"
                                                                        onAnimationStart={[Function]}
                                                                        type="hidden"
                                                                        value=""
                                                                      />
                                                                      <ForwardRef
                                                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                                                      >
                                                                        <WithStyles(ForwardRef(SvgIcon))
                                                                          className="MuiSelect-icon MuiSelect-iconFilled"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="MuiSelect-icon MuiSelect-iconFilled"
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                "root": "MuiSvgIcon-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M7 10l5 5 5-5z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                      </ForwardRef>
                                                                      <WithStyles(ForwardRef(Menu))
                                                                        MenuListProps={
                                                                          Object {
                                                                            "aria-labelledby": "label-color-label",
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby="label-color-label label-color"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                                                            id="label-color"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            <span>
                                                                              ​
                                                                            </span>
                                                                          </div>
                                                                        }
                                                                        id="menu-color"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <ForwardRef(Menu)
                                                                          MenuListProps={
                                                                            Object {
                                                                              "aria-labelledby": "label-color-label",
                                                                              "disableListWrap": true,
                                                                              "role": "listbox",
                                                                            }
                                                                          }
                                                                          PaperProps={
                                                                            Object {
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="label-color-label label-color"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                                                              id="label-color"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "list": "MuiMenu-list",
                                                                              "paper": "MuiMenu-paper",
                                                                            }
                                                                          }
                                                                          id="menu-color"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                        >
                                                                          <WithStyles(ForwardRef(Popover))
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="label-color-label label-color"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                                                                id="label-color"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-color"
                                                                            onClose={[Function]}
                                                                            onEntering={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <ForwardRef(Popover)
                                                                              PaperProps={
                                                                                Object {
                                                                                  "classes": Object {
                                                                                    "root": "MuiMenu-paper",
                                                                                  },
                                                                                  "style": Object {
                                                                                    "minWidth": undefined,
                                                                                  },
                                                                                }
                                                                              }
                                                                              anchorEl={
                                                                                <div
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby="label-color-label label-color"
                                                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                                                                  id="label-color"
                                                                                  role="button"
                                                                                  tabindex="0"
                                                                                >
                                                                                  <span>
                                                                                    ​
                                                                                  </span>
                                                                                </div>
                                                                              }
                                                                              anchorOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              classes={
                                                                                Object {
                                                                                  "paper": "MuiPopover-paper",
                                                                                  "root": "MuiPopover-root",
                                                                                }
                                                                              }
                                                                              getContentAnchorEl={[Function]}
                                                                              id="menu-color"
                                                                              onClose={[Function]}
                                                                              onEntering={[Function]}
                                                                              open={false}
                                                                              transformOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              transitionDuration="auto"
                                                                            >
                                                                              <ForwardRef(Modal)
                                                                                BackdropProps={
                                                                                  Object {
                                                                                    "invisible": true,
                                                                                  }
                                                                                }
                                                                                className="MuiPopover-root"
                                                                                container={
                                                                                  <body
                                                                                    style="padding-right: 0px; overflow: hidden;"
                                                                                  >
                                                                                    <div
                                                                                      aria-hidden="true"
                                                                                      class="app"
                                                                                      id="app"
                                                                                    />
                                                                                    <div
                                                                                      class="MuiDialog-root"
                                                                                      role="presentation"
                                                                                      style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                                                                    >
                                                                                      <div
                                                                                        aria-hidden="true"
                                                                                        class="MuiBackdrop-root"
                                                                                        style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                                                      />
                                                                                      <div
                                                                                        data-test="sentinelStart"
                                                                                        tabindex="0"
                                                                                      />
                                                                                      <div
                                                                                        class="MuiDialog-container MuiDialog-scrollPaper"
                                                                                        role="none presentation"
                                                                                        style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                                                                        tabindex="-1"
                                                                                      >
                                                                                        <div
                                                                                          aria-describedby="alert-dialog-description"
                                                                                          class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiDialog-paperFullScreen MuiPaper-elevation24 MuiPaper-rounded"
                                                                                          role="dialog"
                                                                                        >
                                                                                          <header
                                                                                            class="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary sc-AxhCb jZxptO mui-fixed MuiPaper-elevation4"
                                                                                            style="padding-right: 0px;"
                                                                                          >
                                                                                            <div
                                                                                              class="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                                                                                            >
                                                                                              <button
                                                                                                aria-label="close"
                                                                                                class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                                                                                tabindex="0"
                                                                                                type="button"
                                                                                              >
                                                                                                <span
                                                                                                  class="MuiIconButton-label"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="MuiSvgIcon-root"
                                                                                                    focusable="false"
                                                                                                    viewBox="0 0 24 24"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                                <span
                                                                                                  class="MuiTouchRipple-root"
                                                                                                />
                                                                                              </button>
                                                                                              <h6
                                                                                                class="MuiTypography-root sc-AxhUy eoaQEg MuiTypography-h6"
                                                                                              >
                                                                                                Create
                                                                                                 Label
                                                                                              </h6>
                                                                                              <button
                                                                                                aria-label="save label"
                                                                                                class="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                                                                disabled=""
                                                                                                tabindex="-1"
                                                                                                type="button"
                                                                                              >
                                                                                                <span
                                                                                                  class="MuiIconButton-label"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="MuiSvgIcon-root"
                                                                                                    focusable="false"
                                                                                                    viewBox="0 0 24 24"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              </button>
                                                                                            </div>
                                                                                          </header>
                                                                                          <div
                                                                                            class="MuiDialogContent-root"
                                                                                          >
                                                                                            <form
                                                                                              autocomplete="off"
                                                                                              novalidate=""
                                                                                            >
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                                                              >
                                                                                                <label
                                                                                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-filled Mui-focused Mui-focused Mui-required Mui-required"
                                                                                                  data-shrink="true"
                                                                                                  for="label-name"
                                                                                                  id="label-name-label"
                                                                                                >
                                                                                                  Label name
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                                                  >
                                                                                                     
                                                                                                    *
                                                                                                  </span>
                                                                                                </label>
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth Mui-focused Mui-focused MuiInputBase-formControl"
                                                                                                >
                                                                                                  <input
                                                                                                    aria-describedby="label-name-helper-text"
                                                                                                    aria-invalid="false"
                                                                                                    class="MuiInputBase-input MuiFilledInput-input"
                                                                                                    id="label-name"
                                                                                                    name="name"
                                                                                                    required=""
                                                                                                    type="text"
                                                                                                    value=""
                                                                                                  />
                                                                                                </div>
                                                                                                <p
                                                                                                  class="MuiFormHelperText-root MuiFormHelperText-contained Mui-focused Mui-required"
                                                                                                  id="label-name-helper-text"
                                                                                                >
                                                                                                  <span>
                                                                                                    ​
                                                                                                  </span>
                                                                                                </p>
                                                                                              </div>
                                                                                              <div
                                                                                                class="MuiFormControl-root MuiTextField-root sc-AxjAm aCzVY MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                                                                              >
                                                                                                <label
                                                                                                  class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled Mui-required Mui-required"
                                                                                                  data-shrink="false"
                                                                                                  for="label-color"
                                                                                                  id="label-color-label"
                                                                                                >
                                                                                                  Label color
                                                                                                  <span
                                                                                                    aria-hidden="true"
                                                                                                    class="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                                                                                  >
                                                                                                     
                                                                                                    *
                                                                                                  </span>
                                                                                                </label>
                                                                                                <div
                                                                                                  class="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                                                >
                                                                                                  <div
                                                                                                    aria-haspopup="listbox"
                                                                                                    aria-labelledby="label-color-label label-color"
                                                                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiFilledInput-input"
                                                                                                    id="label-color"
                                                                                                    role="button"
                                                                                                    tabindex="0"
                                                                                                  >
                                                                                                    <span>
                                                                                                      ​
                                                                                                    </span>
                                                                                                  </div>
                                                                                                  <input
                                                                                                    name="color"
                                                                                                    type="hidden"
                                                                                                    value=""
                                                                                                  />
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                                                    focusable="false"
                                                                                                    viewBox="0 0 24 24"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M7 10l5 5 5-5z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </div>
                                                                                              </div>
                                                                                            </form>
                                                                                          </div>
                                                                                        </div>
                                                                                      </div>
                                                                                      <div
                                                                                        data-test="sentinelEnd"
                                                                                        tabindex="0"
                                                                                      />
                                                                                    </div>
                                                                                  </body>
                                                                                }
                                                                                id="menu-color"
                                                                                onClose={[Function]}
                                                                                open={false}
                                                                              />
                                                                            </ForwardRef(Popover)>
                                                                          </WithStyles(ForwardRef(Popover))>
                                                                        </ForwardRef(Menu)>
                                                                      </WithStyles(ForwardRef(Menu))>
                                                                    </ForwardRef(SelectInput)>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(FilledInput)>
                                                          </WithStyles(ForwardRef(FilledInput))>
                                                        </ForwardRef(Select)>
                                                      </WithStyles(ForwardRef(Select))>
                                                    </div>
                                                  </ForwardRef(FormControl)>
                                                </WithStyles(ForwardRef(FormControl))>
                                              </ForwardRef(TextField)>
                                            </WithStyles(ForwardRef(TextField))>
                                          </Styled(WithStyles(ForwardRef(TextField)))>
                                        </form>
                                      </LabelForm>
                                    </div>
                                  </ForwardRef(DialogContent)>
                                </WithStyles(ForwardRef(DialogContent))>
                              </div>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </div>
                      </Transition>
                    </ForwardRef(Slide)>
                  </ForwardRef(Transition)>
                  <div
                    data-test="sentinelEnd"
                    tabIndex={0}
                  />
                </TrapFocus>
              </div>
            </Portal>
          </ForwardRef(Portal)>
        </ForwardRef(Modal)>
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
    <DeleteAlert>
      <WithStyles(ForwardRef(Dialog))
        aria-describedby="alert-dialog-description"
        aria-labelledby="alert-dialog-title"
        id="delete-alert"
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Dialog)
          aria-describedby="alert-dialog-description"
          aria-labelledby="alert-dialog-title"
          classes={
            Object {
              "container": "MuiDialog-container",
              "paper": "MuiDialog-paper",
              "paperFullScreen": "MuiDialog-paperFullScreen",
              "paperFullWidth": "MuiDialog-paperFullWidth",
              "paperScrollBody": "MuiDialog-paperScrollBody",
              "paperScrollPaper": "MuiDialog-paperScrollPaper",
              "paperWidthFalse": "MuiDialog-paperWidthFalse",
              "paperWidthLg": "MuiDialog-paperWidthLg",
              "paperWidthMd": "MuiDialog-paperWidthMd",
              "paperWidthSm": "MuiDialog-paperWidthSm",
              "paperWidthXl": "MuiDialog-paperWidthXl",
              "paperWidthXs": "MuiDialog-paperWidthXs",
              "root": "MuiDialog-root",
              "scrollBody": "MuiDialog-scrollBody",
              "scrollPaper": "MuiDialog-scrollPaper",
            }
          }
          id="delete-alert"
          onClose={[Function]}
          open={false}
        >
          <ForwardRef(Modal)
            BackdropComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "Naked": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "propTypes": Object {
                    "children": [Function],
                    "className": [Function],
                    "classes": [Function],
                    "invisible": [Function],
                    "open": [Function],
                    "transitionDuration": [Function],
                  },
                  "render": [Function],
                },
                "displayName": "WithStyles(ForwardRef(Backdrop))",
                "options": Object {
                  "defaultTheme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.12,
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(0, 0, 0, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(0, 0, 0, 0.04)",
                        "hoverOpacity": 0.04,
                        "selected": "rgba(0, 0, 0, 0.08)",
                        "selectedOpacity": 0.08,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#303f9f",
                        "light": "#7986cb",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                  },
                  "name": "MuiBackdrop",
                },
                "propTypes": Object {
                  "classes": [Function],
                  "innerRef": [Function],
                },
                "render": [Function],
                "useStyles": [Function],
              }
            }
            BackdropProps={
              Object {
                "transitionDuration": Object {
                  "enter": 225,
                  "exit": 195,
                },
              }
            }
            className="MuiDialog-root"
            closeAfterTransition={true}
            disableBackdropClick={false}
            disableEscapeKeyDown={false}
            id="delete-alert"
            onClose={[Function]}
            open={false}
          />
        </ForwardRef(Dialog)>
      </WithStyles(ForwardRef(Dialog))>
    </DeleteAlert>
  </FullscreenDialog>
</Provider>
`;
